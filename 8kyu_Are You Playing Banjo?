********* PROBLEM **********


7 kyu
Fix My Phone Numbers!
Python:
def is_it_a_num(s: str) -> str:
    t = ''.join([i for i in s if i.isdigit()])
    return t if len(t)==11 and t[0] == '0' else "Not a phone number"
    
2 hours agoRefactorDiscuss
def is_it_a_num(s: str) -> str:
    new_s = ''
    for i in s:
        if i in '01234567890':
            new_s += str(i)
    
    if not new_s:
        return "Not a phone number"
    elif new_s[0] != '0' or len(new_s) != 11:
        return "Not a phone number"
    else:
        return new_s
2 hours agoRefactorDiscuss
8 kyu
Contamination #1 -String-
Python:
def contamination(text, char):
    return char*len(text) if char else ""
2 hours agoRefactorDiscuss
7 kyu
Determine if the poker hand is flush
Python:
def is_flush(cards):
    return len({c[-1] for c in cards}) == 1
3 hours agoRefactor
def is_flush(cards):
    test = []
    for i in cards:
        if i[-1] not in test:
            test.append(i[-1])
    return True if len(test)==1 else False
3 hours agoRefactorDiscuss
6 kyu
Longest alphabetical substring
Python:
def longest(st):
    longest = st[0]
    current = st[0]
    
    for i in range(1,len(st)):
        if ord(st[i]) >= ord(st[i-1]):
            current += st[i]
        else:
            current = st[i]
        if len(current)>len(longest):
            longest = current
    return longest
4 days agoRefactorDiscuss
def longest(st):
    longest = st[0]
    current = st[0]
    for i in range(1, len(st)):
        if ord(st[i])>=ord(st[i-1]):
            current += st[i]
        else:
            current = st[i]
        if len(current) > len(longest):
            longest = current
    return longest
4 days agoRefactor
7 kyu
Char Code Calculation
Python:
def calc(x):
    total1 = ''.join(str(ord(i)) for i in x)
    total2 = total1.replace('7', '1')
    return sum(int(digit) for digit in total1)-sum(int(digit) for digit in total2)

7 days agoRefactorDiscuss
7 kyu
Count the divisors of a number
Python:
def divisors(n):
    count = 0
    for i in range(1,n+1):
        if (n/i) % 1 == 0:
            count += 1
    return count
10 days agoRefactorDiscuss
R:
divisors <- function(n) {
  count <- 0
  for (i in 1:n) {
    if ((n/i)%%1 == 0) {
      count <- count+1
    }
  }
  return (count)
}
10 days agoRefactorDiscuss
7 kyu
Finding length of the sequence
Python:
def length_of_sequence(arr,n):
    if not arr or arr.count(n)<2 or arr.count(n) > 2:
        return 0
    count = []
    for i,j in enumerate(arr, start=1)      :
        if j == n:
            count.append(i)
            
    return len(arr[count[0]:count[1]])+1
11 days agoRefactorDiscuss
7 kyu
Find missing numbers
Python:
def find_missing_numbers(arr):
    if not arr or len(arr)<2:
        return []
    res = []
    for i in range(len(arr)-1):
        diff = arr[i+1]-arr[i]
        if diff > 1:
            res.extend(range(arr[i]+1, arr[i+1]))
    return res
12 days agoRefactorDiscuss
7 kyu
How much coffee do you need?
Python:
def how_much_coffee(events):
    total = 0
    evens = ['cw','CW','cat','CAT','dog','DOG','movie','MOVIE']
    for i in events:
        if i in evens and i.islower():
            total += 1
        elif i in evens and i.isupper():
            total += 2
    if total > 3:
        return 'You need extra sleep'
    else:
        return total
13 days agoRefactorDiscuss
7 kyu
How much will you spend?
Python:
def get_total(costs, items, tax):
    total = 0
    for i in items:
        if i in costs.keys():
            total += costs[i]
    return round(total*(1+tax),2)
13 days agoRefactorDiscuss
7 kyu
Is every value in the array an array?
Python:
def arr_check(arr):
    return all(isinstance(i,list) for i in arr)  
13 days agoRefactorDiscuss
6 kyu
I'm longer than you!
Python:
def longer(st): #or longer = lambda st:   if you're more daring :D
    return ' '.join(sorted(st.split(), key=lambda x: (len(x), x)))
13 days agoRefactorDiscuss
7 kyu
Count the Digit
Python:
def nb_dig(n, d):
    count = 0
    for k in range(n+1):
        square = k**2
        count += str(square).count(str(d))
    return count
16 days agoRefactorDiscuss
7 kyu
How Green Is My Valley?
Python:
def make_valley(arr):
    arr = sorted(arr, reverse=True)
    left = arr[0::2]
    right = arr[1::2]
    return left + sorted(right)
16 days agoRefactorDiscuss
7 kyu
esrever esreveR!
Python:
def esrever(st):
    if not st: return ''
    else: return st[-2::-1]+st[-1]
18 days agoRefactorDiscuss
6 kyu
SQL Basics: Simple IN
SQL:
SELECT *
FROM departments
WHERE id IN (
  SELECT department_id
  FROM sales
  WHERE price>98.00)
27 days agoRefactor
-- Create your SELECT statement here
SELECT * 
FROM departments -- select everything from departments table
WHERE id IN(
      SELECT department_id
      FROM sales
      WHERE price > 98.00) -- where the id (from departments table) is in sales table where price>98
7 months agoRefactorDiscuss
7 kyu
How many are smaller than me?
Python:
def smaller(arr):
    res = []
    for i in range(len(arr)):
        count = 0
        for j in arr[i:]:
            if arr[i]>j:
                count += 1
        res.append(count)
    return res
28 days agoRefactorDiscuss
7 kyu
Count consonants
Python:
def consonant_count(s):
    return sum([1 if letter.lower() not in 'aeiou' and letter.isalpha() else 0 for letter in s])
28 days agoRefactorDiscuss
def consonant_count(s):
    return sum([1 if letter.lower() not in 'aeiou 0123456789_#^%$!&' else 0 for letter in s])
28 days agoRefactorDiscuss
7 kyu
Last
Python:
def last(*args):
    if args:
        last = args[-1]
    
        if isinstance(last, (list, tuple)):
            return last[-1]
        elif isinstance(last, str):
            return last[-1]
        else:
            return last
    return None
28 days agoRefactorDiscuss
7 kyu
Insert dashes
Python:
def insert_dash(num):
    digits = [n for n in str(num)]
    
    for i in range(len(digits)-1):
        if int(digits[i])%2!=0 and int(digits[i+1])%2!=0:
            digits[i] = digits[i] + '-'
    return ''.join(digits)
28 days agoRefactorDiscuss
def insert_dash(num):
    num_str = str(num)
    res = num_str[0]
    
    for i in range(1, len(num_str)):
        if int(num_str[i])%2!=0 and int(num_str[i-1])%2!=0:
            res += f'-{num_str[i]}'
        else:
            res += num_str[i]
    return res
28 days agoRefactorDiscuss
8 kyu
Hello, Name or World!
Python:
def hello(name=''):
    if name:
        # Capitalize the first letter and make the rest lowercase
        formatted_name = name.capitalize()
        return f"Hello, {formatted_name}!"
    else:
        return "Hello, World!"
28 days agoRefactorDiscuss
8 kyu
Add Length
Python:
def add_length(str_):
    str = str_.split(' ')
    return [f'{word} {len(word)}' for word in str]
28 days agoRefactorDiscuss
7 kyu
Indexed capitalization
Python:
def capitalize(s, ind):
    res = ''
    for k,v in enumerate(s):
        if k in ind:
            res += v.upper()
        else:
            res += v
    return res
29 days agoRefactorDiscuss
7 kyu
Numbers to Letters
Python:
def switcher(arr):
    alphabet = ' ?!abcdefghijklmnopqrstuvwxyz'
    record = {}
    count = 29  
    for i in alphabet:
        record[str(count)]=i
        count -= 1
    return ''.join([record.get(j, '0') for j in arr])

        
last monthRefactorDiscuss
8 kyu
Stringy Strings
Python:
def stringy(size):
    return ('10'*(size//2)) if size % 2 == 0 else ('10'*(size//2)+'1') 
        
last monthRefactorDiscuss
8 kyu
Grasshopper - If/else syntax debug
Python:
def check_alive(health):
    return False if health <= 0 else True
last monthRefactorDiscuss
8 kyu
What's the real floor?
Python:
def get_real_floor(n):
    if n<0:
        return n
    elif n==0:
        return 0
    elif n<13:
        return n-1
    else:
        return n-2
last monthRefactorDiscuss
R:
get_real_floor <- function(n){
  if (n==0) {
    return (0)
  } else if (n<0) {
    return (n)
  } else if (n<13) {
    return (n-1)
  } else {
    return (n-2)
  }

}
last monthRefactorDiscuss
8 kyu
Filter out the geese
Python:
geese = ["African", "Roman Tufted", "Toulouse", "Pilgrim", "Steinbacher"]
def goose_filter(birds):
    res = []
    for bird in birds:
        if bird in geese:
            continue
        else:
            res.append(bird)
    return res
last monthRefactorDiscuss
7 kyu
Who is the killer?
Python:
def killer(suspect_info, dead):
    for k,v in suspect_info.items():
        if set(dead) <= set(v):
            return k
    return None
    
last monthRefactor
def killer(suspect_info, dead):
    for k,v in suspect_info.items():
        if all(person in v for person in dead):
            return k
    return None
last monthRefactorDiscuss
7 kyu
Caffeine Script
Python:
def caffeine_buzz(n):
    result = ""

    if n % 3 == 0 and n%4 != 0:
        result += "Java"
        if n % 2 == 0:
            result += "Script"
    if n%3 == 0 and n % 4 == 0:
        result += "Coffee"
        if n % 2 == 0:
            result += "Script"

    return result if result else "mocha_missing!"
last monthRefactorDiscuss
7 kyu
Boiled Eggs
Python:
def cooking_time(eggs):
    return (eggs//8)*5 + (5 if eggs%8 != 0 else 0)
last monthRefactorDiscuss
7 kyu
Alphabet symmetry
Python:
def solve(strings : list[str]) -> list[int]:
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    alpha = {}
    count = 1
    for i in alphabet:
        alpha[i] = count
        count += 1
        
    result = []
    
    for word in strings:
        count_matches = sum(1 for i, char in enumerate(word,start=1) if alpha.get(char.lower(),0) == i)
        result.append(count_matches)
    
    return result
last monthRefactorDiscuss
7 kyu
Deodorant Evaporator
Python:
def evaporator(content, evap_per_day, threshold):
    day = 0
    threshold_value = content*(threshold/100)
    while content > threshold_value:
        content *= (1-(evap_per_day/100))
        day += 1
    return day
	
last monthRefactorDiscuss
7 kyu
You're a square!
Python:
import math
def is_square(n):    
    return n > -1 and math.isqrt(n)**2 == n
last monthRefactorDiscuss
R:
is_square <- function(n){
  return (n >= 0 && sqrt(n) %% 1 == 0)
}
last monthRefactorDiscuss
7 kyu
Sum the Repeats
Python:
def repeat_sum(l):
    tally = {}
    for sl in l:
        unique = set(sl)
        
        for num in unique:
            tally[num] = tally.get(num, 0) + 1
    result = [num for num,count in tally.items() if count >= 2]
    return sum(result)
last monthRefactorDiscuss
def repeat_sum(l):
    tally = {}
    
    for sl in l:
        unique = set(sl)
        
        for num in unique:
            tally[num] = tally.get(num, 0) + 1
    
    result = [num for num,count in tally.items() if count>=2]
    
    return sum(result)
                
last monthRefactor
7 kyu
Distance from the average
Python:
def distances_from_average(test_list):
    ave = sum(test_list)/len(test_list)
    return [round(ave-i,2) for i in test_list]
last monthRefactorDiscuss
8 kyu
Simple validation of a username with regex
Python:
def validate_usr(username):
    if len(username)<4 or len(username)>17:
        return False
    for i in username:
        if i == '_':
            continue
        elif i.isupper() or not i.isalnum():
            return False
    return True
last monthRefactorDiscuss
7 kyu
Digitize
Python:
def digitize(n):
    return [int(i) for i in str(n)]
last monthRefactorDiscuss
6 kyu
Run-length encoding
Python:
def run_length_encoding(s):
    res = []
    stack = 1
    
    if not s:
        return []
    
    for i in range(len(s)-1):
        if s[i] == s[i+1]:
            stack += 1
        else:
            res.append([stack, s[i]])
            stack = 1
    res.append([stack, s[-1]])
    return res
last monthRefactorDiscuss
6 kyu
longest_palindrome
Python:
def longest_palindrome (s):
    res = []
    counter = []
    
    for i in range(len(s)):
        for j in range(i, len(s)):
            substring = s[i:j+1]
            if substring == substring[::-1]:
                res.append(substring)
        
    for words in res:
        counter.append(len(words))
    
    return max(counter) if counter else 0
last monthRefactorDiscuss
def longest_palindrome (s):
    res = []
    counter = []
    for i in range(len(s)):
        for j in range(i, len(s)):
            substring = s[i:j+1]
            if substring == substring[::-1]:
                res.append(substring)
    
    for palindrome in res:
        counter.append(len(palindrome))

    return max(counter) if counter else 0
        
last monthRefactorDiscuss
7 kyu
Sort Out The Men From Boys
Python:
def men_from_boys(arr):
    even = []
    odd = []
    for i in arr:
        if i % 2 == 0 and i not in even:
            even.append(i)
        elif i % 2 != 0 and i not in odd:
            odd.append(i)
    return sorted(even)+sorted(odd,reverse=True)
last monthRefactorDiscuss
7 kyu
Simple consecutive pairs
Python:
def pairs(ar):
    count = 0
    for i in range(0,len(ar)-1,2):
        if ar[i]+1 == ar[i+1] or ar[i]-1 == ar[i+1]:
            count += 1
        else: continue
    return count
last monthRefactorDiscuss
7 kyu
Array element parity
Python:
def solve(arr):
    return sum(set(arr))
last monthRefactor
def solve(arr):
    arr = set(arr)
    p,n =0,0
    for i in arr:
        if i>0: p += i
        elif i<0: p -= i
    return sum(arr) if p>n else -sum(arr)
last monthRefactorDiscuss
7 kyu
Sort by Last Char
Python:
def last(s):
    return sorted(s.split(), key=lambda x: x[-1])
last monthRefactor
def last(s):
    words = s.split()
    return sorted(words, key=lambda word: (word[-1], words.index(word)))
last monthRefactorDiscuss
7 kyu
Simple string characters
Python:
def solve(s):
    u,l,n,o = 0,0,0,0
    for i in str(s):
        if i.isupper(): u += 1
        elif i.islower(): l += 1
        elif i in '1234567890': n += 1
        elif not i.isalpha(): o += 1
    return [u,l,n,o]
            
last monthRefactorDiscuss
7 kyu
Help the Fruit Guy
Python:
def remove_rotten(bag_of_fruits):
    res = []
    if not bag_of_fruits:
        return res
    for i in bag_of_fruits:
        if i[:6] == 'rotten':
            res.append(i[6:].lower())
        else:
            res.append(i)
    return res
        
last monthRefactorDiscuss
7 kyu
Averages of numbers
Python:
def averages(arr):
    res = []
    if not arr:
        return res
    for i in range(0,len(arr)-1):
        res.append((arr[i]+arr[i+1])/2)
    return res
last monthRefactorDiscuss
7 kyu
Spacify
Python:
def spacify(string):
    return ' '.join(string)
last monthRefactor
def spacify(string):
    res = ''
    for i in string:
        res += f'{i} '
    return res[:-1]
last monthRefactorDiscuss
7 kyu
V A P O R C O D E
Python:
def vaporcode(s):
    return '  '.join(s.replace(' ','').upper())
2 months agoRefactor
def vaporcode(s):
    res = ''
    for i in s.replace(' ','').upper():
        res += f'{i}  '
    return res[:-2]
2 months agoRefactorDiscuss
7 kyu
Maximum Triplet Sum (Array Series #7)
Python:
def max_tri_sum(numbers):
    return sum(sorted(set(numbers))[-3:])
2 months agoRefactor
def max_tri_sum(numbers):
    sorted_numbers = sorted(numbers,reverse=True)
    res = []
    for n in sorted_numbers:
        if len(res)!= 3 and n not in res:
            res.append(n)
        else:
            continue
    return sum(res)
    
2 months agoRefactorDiscuss
6 kyu
Roman Numerals Encoder
Python:
def solution(n):
    dict = {
        1: 'I', 4: 'IV', 5: 'V', 9: 'IX',
        10: 'X', 40: 'XL', 50: 'L', 90: 'XC',
        100: 'C', 400: 'CD', 500: 'D', 900: 'CM',
        1000: 'M'
    }
    res = ''
    for val in sorted(dict.keys(), reverse=True):
        while n >= val:
            res += dict[val]
            n -= val
    return res
2 months agoRefactorDiscuss
def solution(n):
    dict = {
        1: 'I', 4: 'IV', 5: 'V', 9: 'IX',
        10: 'X', 40: 'XL', 50: 'L', 90: 'XC',
        100: 'C', 400: 'CD', 500: 'D', 900: 'CM',
        1000: 'M'
    }

    
    res = ''
    for value in sorted(dict.keys(), reverse=True):
        while n>=value:
            res += dict[value]
            n -= value
    return res                
    
2 months agoRefactorDiscuss
6 kyu
Decode the Morse code
Python:
from preloaded import MORSE_CODE

def decode_morse(morse_code):
    words = morse_code.strip().split("   ")  # Split Morse code into words
    decoded_words = []

    for word in words:
        letters = word.split(" ")  # Split word into Morse code letters
        decoded_word = "".join([MORSE_CODE[letter] for letter in letters if letter in MORSE_CODE])
        decoded_words.append(decoded_word)

    return " ".join(decoded_words)
2 months agoRefactorDiscuss
7 kyu
Incrementer
Python:
def incrementer(nums):
    res = []
    for i,j in enumerate(nums, start=1):
        if i+j < 10:
            res.append(i+j)
        else:
            res.append(int(str(i+j)[-1]))
    return res
2 months agoRefactorDiscuss
7 kyu
Alternate case
Python:
def alternate_case(s):
    return ''.join([i.lower() if i.isupper() else i.upper() for i in s])
2 months agoRefactorDiscuss
7 kyu
Vowel one
Python:
def vowel_one(s):
    return ''.join(['1' if i.lower() in 'aeiou' else '0' for i in s])
2 months agoRefactorDiscuss
7 kyu
Product Of Maximums Of Array (Array Series #2)
Python:
def max_product(lst, n_largest_elements): 
    arr = sorted(lst, reverse=True)
    total = 1
    for i in range(0,n_largest_elements):
        total *= arr[i]
    return total
2 months agoRefactorDiscuss
7 kyu
Nth Smallest Element (Array Series #4)
Python:
def nth_smallest(arr, pos):
    arr = sorted(arr)
    return arr[pos-1]
2 months agoRefactorDiscuss
7 kyu
Basic Sequence Practice
Python:
def sum_of_n(n):
    res = [0]
    if n > 0:
        for i in range(1, n + 1):
            res.append(res[-1] + i)
    elif n < 0:
        for i in range(-1, n - 1, -1):
            res.append(res[-1] + i)
    return res
        
2 months agoRefactorDiscuss
6 kyu
N-th Fibonacci
Python:
def nth_fib(n):
	first, second, temp = 0, 1, 0
	for i in range(1,n):
		temp = second
		second = first+second
		first = temp
	return first
2 months agoRefactorDiscuss
7 kyu
Factorial
Python:
def factorial(n):
    if n < 0 or n > 12:
        raise ValueError
    else:
        result = 1
        for n in range(n,0,-1):
            result *= n
        return result
        
2 months agoRefactorDiscuss
8 kyu
Drink about
Python:
def people_with_age_drink(age):
    if age < 14:
        return "drink toddy"
    elif age < 18:
        return "drink coke"
    elif age < 21:
        return "drink beer"
    else:
        return "drink whisky"
2 months agoRefactorDiscuss
8 kyu
Vowel remover
Python:
def shortcut( s ):
    return ''.join(i for i in s if i not in 'aeiou')
2 months agoRefactorDiscuss
8 kyu
Find Multiples of a Number
Python:
def find_multiples(integer, limit):
    return [x for x in range(integer, limit+1, integer)]
2 months agoRefactorDiscuss
8 kyu
My head is at the wrong end!
Python:
def fix_the_meerkat(arr):
    return [arr[-1],arr[1],arr[0]]
2 months agoRefactorDiscuss
R:
fix_the_meerkat <- function(vec){
  return (c(vec[3],vec[2],vec[1]))
}
2 months agoRefactorDiscuss
8 kyu
Unfinished Loop - Bug Fixing #1
Python:
def create_array(n):
    res=[]
    i=0
    while i<n: 
        i += 1
        res+=[i]
    return res
2 months agoRefactorDiscuss
8 kyu
I love you, a little , a lot, passionately ... not at all
Python:
def how_much_i_love_you(nb_petals):
    phrases = [
        "I love you",
        "a little",
        "a lot",
        "passionately",
        "madly",
        "not at all"
    ]
    return phrases[(nb_petals-1)%len(phrases)]
        
            
            
2 months agoRefactorDiscuss
8 kyu
Count Odd Numbers below n
Python:
def odd_count(n):
    return n//2
2 months agoRefactorDiscuss
R:
odd_count <- function(n) {
  n %/% 2

}
2 months agoRefactorDiscuss
8 kyu
Grasshopper - Messi Goals
Python:
la_liga_goals = 43
champions_league_goals = 10
copa_del_rey_goals = 5

total_goals = la_liga_goals + champions_league_goals + copa_del_rey_goals
2 months agoRefactorDiscuss
7 kyu
Customers with All Orders Undelivered
SQL:
SELECT DISTINCT customer_id
FROM orders
WHERE customer_id NOT IN (
  SELECT customer_id
  FROM orders
  WHERE delivery_date IS NOT NULL)
ORDER BY customer_id DESC
2 months agoRefactorDiscuss
7 kyu
Drug Dosages with Dual Unit Measurements
SQL:
SELECT
  dr.record_id,
  d.drug_name,
  dr.drug_amount,
  CONCAT(u.unit_name, COALESCE('/' || u2.unit_name, '')) AS dose_units
FROM
  dose_records dr
JOIN
  drugs d ON dr.drug_id = d.drug_id
JOIN
  units u ON dr.drug_unit_id = u.unit_id
LEFT JOIN
  units u2 ON dr.check_unit_id = u2.unit_id
ORDER BY
  d.drug_name ASC,
  dr.record_id ASC;
2 months agoRefactorDiscuss
6 kyu
Array Deep Count
Python:
def deep_count(a):
    count = 0
    for i in range(len(a)):
        if isinstance(a[i], list):
            count += deep_count(a[i])
        count += 1
    return count

2 months agoRefactor
def deep_count(a):
    count = 0
    for item in a:
        if isinstance(item, list):
            count += 1
            count += deep_count(item)
        else:
            count += 1
    return count
2 months agoRefactorDiscuss
6 kyu
Pyramid Array
Python:
def pyramid(n):
    return [[1]*i for i in range(1, n+1)]
2 months agoRefactorDiscuss
7 kyu
Find the nth Digit of a Number
Python:
def find_digit(num, nth):
    if nth <= 0:
        return -1
    elif nth > len(str(abs(num))):
        return 0
    else:
        for i,j in enumerate(reversed(str(abs(num))),start=1):
            if nth == i:
                return int(j)
        
        
        
2 months agoRefactorDiscuss
6 kyu
Replace With Alphabet Position
Python:
def alphabet_position(text):
    return ' '.join(str(ord(a)-96) for a in text.lower() if a.isalpha())
2 months agoRefactor
def alphabet_position(text):
    dict = {}
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    count = 1
    for i in alphabet:
        if i not in dict:
            dict[i] = str(count)
            count += 1
    res = []
    for i in text.lower():
        if i in dict:
            res.append(dict[i])
    return ' '.join(res)
2 months agoRefactorDiscuss
7 kyu
Smallest value of an array
Python:
def find_smallest(numbers,to_return):
	lowest = min(numbers)
	for i,j in enumerate(numbers):
		if j == lowest:
			if to_return == 'value':
				return j
			else:
				return i
		else:
			continue
2 months agoRefactorDiscuss
7 kyu
Convert an array of strings to array of numbers
Python:
def to_float_array(arr): 
    return [float(i) for i in arr]
2 months agoRefactorDiscuss
7 kyu
Number Of Occurrences
Python:
def number_of_occurrences(element, sample):
    return sample.count(element)
2 months agoRefactorDiscuss
7 kyu
Divide and Conquer
Python:
def div_con(x):
    return sum(-int(i) if type(i)!=int else i for i in x)
2 months agoRefactorDiscuss
7 kyu
Simple remove duplicates
Python:
def solve(arr): 
	result = []
	for i in arr[-1::-1]:
		if i not in result:
			result.append(i)
		else:
			continue
	return result[::-1]
2 months agoRefactorDiscuss
7 kyu
Minimize Sum Of Array (Array Series #1)
Python:
def min_sum(arr):
    arr.sort()
    return sum(arr[i]*arr[-i-1] for i in range(len(arr)//2))
2 months agoRefactorDiscuss
def min_sum(arr):
    arr.sort()
    return sum(arr[i] * arr[-i-1] for i in range(len(arr)//2))    
2 months agoRefactor
8 kyu
Cat years, Dog years
Python:
def human_years_cat_years_dog_years(human_years):
    cat_years = 0
    for i in range(1, human_years+1):
        if i == 1:
            cat_years += 15
        elif i == 2:
            cat_years += 9
        else:
            cat_years += 4
    dog_years = 0
    for j in range(1, human_years+1):
        if j == 1:
            dog_years += 15
        elif j == 2:
            dog_years += 9
        else:
            dog_years += 5
    return [human_years, cat_years, dog_years]
2 months agoRefactorDiscuss
R:
human_years_cat_years_dog_years <- function(human_years){
  cat_years <- 0
  dog_years <- 0

  for (i in 1:human_years) {
    if (i == 1) {
      cat_years <- cat_years + 15
      dog_years <- dog_years + 15
    } else if (i == 2) {
      cat_years <- cat_years + 9
      dog_years <- dog_years + 9
    } else {
      cat_years <- cat_years + 4
      dog_years <- dog_years + 5
    }
  }

  return(c(human_years,cat_years,dog_years))
}
2 months agoRefactorDiscuss
8 kyu
All Star Code Challenge #18
Python:
def str_count(strng, letter):
    return strng.count(letter)
2 months agoRefactorDiscuss
8 kyu
Grasshopper - Debug sayHello
Python:
def say_hello(name):
    return f'Hello, {name}'
2 months agoRefactorDiscuss
8 kyu
Beginner Series #4 Cockroach
Python:
def cockroach_speed(s):
    speed_cms = s * 100000 / 3600
    return int(speed_cms)
2 months agoRefactorDiscuss
7 kyu
Sum of numbers from 0 to N
Python:
def show_sequence(n):
    res = ''
    if n<0:
        return f'{n}<0'
    elif n==0:
        return '0=0'
    else:
        for i in range(0,n):
            res += f'{i}+'
        return res+str(n)+f' = {sum(i for i in range(1,n+1))}'
2 months agoRefactorDiscuss
7 kyu
Power of two
Python:
def power_of_two(x):
    return x > 0 and bin(x).count('1') == 1
2 months agoRefactorDiscuss
7 kyu
Factorial
Python:
def factorial(n):
    total = 1
    for i in range(n,1,-1):
        total *= i
    return total
2 months agoRefactorDiscuss
7 kyu
Fizz Buzz
Python:
def fizzbuzz(n):
    result = []
    for i in range(1,n+1):
        if i % 3 == 0 and i % 5 == 0:
            result.append('FizzBuzz')
        elif i % 3 == 0:
            result.append('Fizz')
        elif i % 5 == 0:
            result.append('Buzz')
        else:
            result.append(i)
    return result
2 months agoRefactorDiscuss
7 kyu
Money, Money, Money
Python:
def calculate_years(principal, interest, tax, desired):
    i,iat,count = 0,0,0
    while principal < desired:
        i = (principal*interest)
        iat = i-(i*tax)
        principal += iat
        count += 1
    return count
2 months agoRefactorDiscuss
6 kyu
Length of missing array
Python:
def get_length_of_missing_array(array_of_arrays):
    if not array_of_arrays or any(array is None or not array for array in array_of_arrays):
        return 0 
    
    lengths = sorted(len(array) for array in array_of_arrays)
    for i, length in enumerate(lengths, lengths[0]):
        if length != i:
            return i
2 months agoRefactorDiscuss
6 kyu
If you can read this...
Python:
def to_nato(words):
	res = []
	for letter in words.upper():
		if letter in NATO:
			res.append(NATO[letter])
		elif letter not in NATO and letter != ' ':
			res.append(letter)
	return ' '.join(res)
2 months agoRefactorDiscuss
6 kyu
Reverse every other word in the string
Python:
def reverse_alternate(s):
# sample: "Did it work"
    return ' '.join([word if index%2==0 else word[::-1] for index, word in enumerate(s.split())])
2 months agoRefactorDiscuss
6 kyu
The Vowel Code
Python:
def encode(st):
    for i, v in enumerate('aeiou', start=1):
        st = st.replace(v, str(i))
    return st
    
def decode(st):
    for i, v in enumerate('aeiou', start=1):
        st = st.replace(str(i), v)
    return st

    
    
2 months agoRefactor
# vowels to numbers
def encode(st):
    vowel = {'a': '1', 'e': '2', 'i': '3', 'o': '4', 'u': '5'}
    encoded_st = ""
    for i in st:
        if i in vowel:
            encoded_st += vowel[i]
        else:
            encoded_st += i
    return encoded_st

# numbers to vowels
def decode(st):
    numbers = {'1': 'a', '2': 'e', '3': 'i', '4': 'o', '5': 'u'}
    decoded_st = ""
    for i in st:
        if i in numbers:
            decoded_st += numbers[i]
        else:
            decoded_st += i
    return decoded_st
2 months agoRefactorDiscuss
6 kyu
Consonant value
Python:
def solve(s):
    # assign numbers to alphabet 1=1

    alphabet = {}
    count = 1
    for i in 'abcdefghijklmnopqrstuvwxyz':
        alphabet[i] = count
        count += 1

    # cut out substring and get total from alphabet (using max?) sample: "chruschtschov"

    total = 0
    temp = 0
    for letter in s:
        if letter not in 'aeiou':
            temp += alphabet[letter]
            total = max(total, temp)
        else:
            total = max(total, temp)
            temp = 0

    # return max recorded result

    return total
2 months agoRefactorDiscuss
6 kyu
Good vs Evil
Python:
def good_vs_evil(good, evil):
    angel = [1, 2, 3, 3, 4, 10]
    devil = [1, 2, 2, 2, 3, 5, 10]

    angel_total = sum(int(value)*angel for value, angel in zip(good.split(), angel))
    devil_total = sum(int(value)*devil for value, devil in zip(evil.split(), devil))

    if angel_total > devil_total:
        return 'Battle Result: Good triumphs over Evil'
    elif devil_total > angel_total:
        return 'Battle Result: Evil eradicates all trace of Good'
    else:
        return 'Battle Result: No victor on this battle field'

        
2 months agoRefactorDiscuss
7 kyu
Odd-Even String Sort
Python:
def sort_my_string(s):
    return s[::2] + ' ' + s[1::2]
2 months agoRefactor
def sort_my_string(s):
    even = ''
    odd = ''
    for i,j in enumerate(s):
        if i%2 == 0:
            even += j
        else:
            odd += j
    return f'{even} {odd}'
2 months agoRefactorDiscuss
7 kyu
Halving Sum
Python:
def halving_sum(n): 
    total = []
    while n > 0:
        total.append(n)
        n = n//2
    return sum(total)
2 months agoRefactorDiscuss
7 kyu
Palindrome chain length
Python:
def palindrome_chain_length(n):
    n = str(n)
    count = 0
    while int(n) != int(n[::-1]):
        n = str(int(n) + int(n[::-1]))
        count += 1
    return count
        
2 months agoRefactorDiscuss
7 kyu
Simple beads count
Python:
def count_red_beads(n):
    return (n-1)*2
2 months agoRefactorDiscuss
7 kyu
Parts of a list
Python:
def partlist(arr):
    result = []
    for i in range(1,len(arr)):
        part1 = ' '.join(arr[:i])
        part2 = ' '.join(arr[i:])
        result.append((part1,part2))
    return result
2 months agoRefactorDiscuss
7 kyu
Alphabet war
Python:
def alphabet_war(fight):
    left = {'w': 4, 'p':3, 'b':2, 's':1}
    right = {'m':4, 'q':3, 'd':2, 'z':1}
    total_left = 0
    total_right = 0
    for i in fight:
        if i in left:
            total_left += left[i]
        elif i in right:
            total_right += right[i]
    if total_left>total_right:
        return 'Left side wins!'
    elif total_right>total_left:
        return 'Right side wins!'
    else:
        return "Let's fight again!"
2 months agoRefactorDiscuss
7 kyu
Maximum Length Difference
Python:
def mxdiflg(a1, a2):
    if not a1 or not a2:
        return -1
    min_a1 = float('inf')
    max_a1 = float('-inf')
    for x in a1:
        min_a1 = min(min_a1, len(x))
        max_a1 = max(max_a1, len(x))
    
    min_a2 = float('inf')
    max_a2 = float('-inf')
    for y in a2:
        min_a2 = min(min_a2, len(y))
        max_a2 = max(max_a2, len(y))
    
    return max(abs(max_a1 - min_a2), abs(max_a2 - min_a1))
2 months agoRefactorDiscuss
7 kyu
Flatten and sort an array
Python:
def flatten_and_sort(array):
    new_array = []
    for i in array:
        if i:
            for j in i:
                new_array.append(j)
    return sorted(new_array)
2 months agoRefactorDiscuss
7 kyu
Form The Minimum
Python:
def min_value(digits):
    new_digits = set(digits)
    return int(''.join(sorted(map(str, new_digits))))
2 months agoRefactorDiscuss
R:
min_value <- function(digits){
  new_digits <- unique(digits)
  return (as.integer(paste0(sort(as.character(new_digits)),collapse='')))
}
2 months agoRefactorDiscuss
min_value <- function(digits){
  new_digits <- unique(digits)
  result <- as.integer(paste0(sort(as.character(new_digits)), collapse=''))
  return (result)
}
2 months agoRefactorDiscuss
7 kyu
Round up to the next multiple of 5
Python:
def round_to_next5(n):
    while n%5!=0:
        n += 1
    return n
2 months agoRefactorDiscuss
8 kyu
Transportation on vacation
Python:
def rental_car_cost(d):
    total = 40 * d
    if d >= 7:
        total -= 50
    elif d >= 3:
        total -=20
    return total
2 months agoRefactorDiscuss
8 kyu
Beginner - Reduce but Grow
Python:
def grow(arr):
    total = 1
    for i in arr:
        total *= i
    return total
2 months agoRefactorDiscuss
6 kyu
Playing with digits
Python:
def dig_pow(n, p):
    if p == 0:
        return -1
    
    n_str = str(n)
    total = sum(int(digit) ** (p + i) for i, digit in enumerate(n_str))
    
    if total % n == 0:
        return total // n
    else:
        return -1
    
2 months agoRefactorDiscuss
6 kyu
Mexican Wave
Python:
def wave(people):
    result = []
    for i in range(len(people)):
        if people[i].isalpha():
            result.append(people[:i]+people[i].upper()+people[i+1:])
    return result
    
        
2 months agoRefactorDiscuss
6 kyu
Is a number prime?
Python:
import math
def is_prime(num):
    if num <=1:
        return False
    if num <=3:
        return True
    if num%2==0 or num%3==0:
        return False
    for i in range(5, int(math.sqrt(num))+1,6):
        if num % i == 0 or num % (i + 2) == 0:
            return False
    return True
2 months agoRefactorDiscuss
6 kyu
Multiples of 3 or 5
Python:
def solution(number):
    return sum(num for num in range(1, number) if num%3==0 or num%5==0)
            
  
2 months agoRefactorDiscuss
7 kyu
Uglify Word
Python:
def uglify_word(s):
    new_s = ""
    even = 0
    for char in s:
        if char.isalpha() and even%2==0:
            new_s += char.title()
            even += 1
        else:
            new_s += char.lower()
            even = 0
    return new_s
            
2 months agoRefactorDiscuss
7 kyu
Find Count of Most Frequent Item in an Array
Python:
def most_frequent_item_count(collection):
    if collection:
        return max([collection.count(item) for item in collection])
    return 0
2 months agoRefactor
def most_frequent_item_count(collection):
    count = {}
    if not collection:
        return 0
    for i in collection:
        if i not in count:
            count[i] = 1
        else:
            count[i] += 1
    return max(count.values())
2 months agoRefactorDiscuss
7 kyu
Elevator Distance
Python:
def elevator_distance(array):
    total = 0
    for floor in range(1, len(array)):
        total += abs(array[floor]-array[floor-1])
    return total
        
2 months agoRefactorDiscuss
7 kyu
Find The Duplicated Number in a Consecutive Unsorted List
Python:
def find_dup(arr):
    count = {}
    for i in arr:
        if i not in count:
            count[i] = 1
        else:
            count[i] += 1
    for index, number in count.items():
        if number == 2:
            return index

2 months agoRefactorDiscuss
8 kyu
Basic variable assignment
Python:
a = "code"
b = "wa.rs"
name = a + b
2 months agoRefactorDiscuss
8 kyu
Sum The Strings
Python:
def sum_str(a, b):
    return str(int(a or 0)+int(b or 0))
2 months agoRefactor
def sum_str(a, b):
    if not a:
        a = '0'
    if not b:
        b = '0'
    return str(int(a) + int(b))
    
2 months agoRefactorDiscuss
6 kyu
Customer Rebates Based on Total Orders for September 2023
SQL:
SELECT totals.*, MAX(rebate_percentage) AS rebate_percentage
FROM (
  SELECT customer_id, SUM(order_amount) AS total_orders
  FROM orders
  WHERE order_date BETWEEN '2023-09-01' AND '2023-09-30'
  GROUP BY customer_id) AS totals
JOIN rebates ON min_purchase <= total_orders
GROUP BY 1,2
ORDER BY 1 DESC
3 months agoRefactorDiscuss
WITH sep_orders AS (
  SELECT
    o.customer_id AS customer_id,
    SUM(o.order_amount) AS total_orders
  FROM orders o
  WHERE
    EXTRACT(YEAR FROM o.order_date) = 2023
    AND EXTRACT(MONTH FROM o.order_date) = 9
  GROUP BY o.customer_id
)

SELECT
  so.customer_id AS customer_id,
  so.total_orders,
  MAX(r.rebate_percentage) AS rebate_percentage
FROM sep_orders so
LEFT JOIN rebates r ON so.total_orders >= r.min_purchase
GROUP BY so.customer_id, so.total_orders
HAVING so.total_orders >= MIN(r.min_purchase)
ORDER BY so.customer_id DESC;
3 months agoRefactorDiscuss
8 kyu
Is it a palindrome?
Python:
def is_palindrome(s):
    return s.lower() == s[::-1].lower()
3 months agoRefactorDiscuss
8 kyu
Area or Perimeter
Python:
def area_or_perimeter(l , w):
    return l * w if l == w else 2*(l+w)
3 months agoRefactorDiscuss
8 kyu
Reverse List Order
Python:
def reverse_list(l):
    return l[::-1]
3 months agoRefactorDiscuss
8 kyu
Powers of 2
Python:
def powers_of_two(n):
    return [2**i for i in range(0,n+1)]
        
3 months agoRefactorDiscuss
8 kyu
Correct the mistakes of the character recognition software
Python:
def correct(s):
    return s.replace('5','S').replace('1','I').replace('0','O')
3 months agoRefactorDiscuss
8 kyu
altERnaTIng cAsE <=> ALTerNAtiNG CaSe
Python:
def to_alternating_case(string):
    result = ""
    for char in string:
        if char.isupper():
            result += char.lower() 
        else:
            result += char.upper()
    return result
3 months agoRefactorDiscuss
8 kyu
Do I get a bonus?
Python:
def bonus_time(salary, bonus):
    return f"${salary*10}" if bonus == True else f"${salary}"
3 months agoRefactorDiscuss
8 kyu
Is it even?
Python:
def is_even(n): 
    return True if n % 2 == 0 else False
3 months agoRefactorDiscuss
8 kyu
Find the first non-consecutive number
Python:
def first_non_consecutive(arr):
    for digit in range(len(arr)-1):
        if arr[digit] == arr[digit+1]-1:
            continue
        else:
            return arr[digit+1]
    return None
3 months agoRefactorDiscuss
8 kyu
Reversed Words
Python:
def reverse_words(s):
    reversed = s.split()
    return ' '.join(reversed[::-1])
3 months agoRefactorDiscuss
8 kyu
Count the Monkeys!
Python:
def monkey_count(n):
    return [i for i in range(1,n+1)]
3 months agoRefactorDiscuss
R:
monkey_count <- function(n) {
  return (1:n)
}
3 months agoRefactorDiscuss
8 kyu
Keep up the hoop
Python:
def hoop_count(n):
    return "Great, now move on to tricks" if n >= 10 else "Keep at it until you get it"
3 months agoRefactorDiscuss
R:
hoop_count <- function(n){
 return (ifelse(n>=10,"Great, now move on to tricks","Keep at it until you get it"))
}
3 months agoRefactorDiscuss
8 kyu
Parse nice int from char problem
Python:
def get_age(age):
    return int(age[0])
3 months agoRefactorDiscuss
8 kyu
The Feast of Many Beasts
Python:
def feast(beast, dish):
    return True if beast[0] == dish[0] and beast[-1] == dish[-1] else False
3 months agoRefactorDiscuss
8 kyu
L1: Set Alarm
Python:
def set_alarm(employed, vacation):
    return True if employed == True and vacation == False else False
3 months agoRefactorDiscuss
R:
set_alarm <- function(employed, vacation) {
  if (employed == TRUE & vacation == FALSE) {
    return (TRUE)
  } else {
    return (FALSE)
  }

}
3 months agoRefactorDiscuss
7 kyu
Dominant array elements
Python:
def solve(arr):
    result = []
    for i, n in enumerate(arr):
        if all(x<n for x in arr[i+1:]):
            result.append(n)
    return result
3 months agoRefactorDiscuss
def solve(arr):
    result = []
    for num in range(len(arr)):
        if all(arr[num] > x for x in arr[num+1:]):
            result.append(arr[num])
    return result
            
3 months agoRefactorDiscuss
8 kyu
Is the string uppercase?
Python:
def is_uppercase(inp):
    for char in inp: 
        if char.islower():
            return False
    return True
3 months agoRefactorDiscuss
7 kyu
Day of the Year
Python:
def to_day_of_year(date):
    day = date[0]
    month = 0
    x = [1,3,5,7,8,10,12]
    if date[2] % 4 != 0:
        for i in range(1, date[1]):
            if i == 2:
                month += 28
            elif i in x:
                month += 31
            else:
                month += 30
        return day + month
    else:
        for i in range(1, date[1]):
            if i == 2:
                month += 29
            elif i in x:
                month += 31
            else:
                month += 30
        return day + month
3 months agoRefactorDiscuss
7 kyu
Spin Around, Touch the Ground
Python:
def spin_around(lst):
    return abs(sum([90 if move == 'left' else -90 for move in lst]))//360
            
3 months agoRefactorDiscuss
7 kyu
Even numbers in an array
Python:
def even_numbers(arr,n):
    return [digit for digit in arr if digit % 2 == 0][-n::]
3 months agoRefactorDiscuss
def even_numbers(arr,n):
    even = []
    for digit in arr[::-1]:
        if digit % 2 == 0:
            even.append(digit)
            if len(even) == n:
                return even[::-1]
3 months agoRefactorDiscuss
6 kyu
Common array elements
Python:
from collections import Counter
def common(a, b, c):
    set_a, set_b, set_c = Counter(a), Counter(b), Counter(c)
    common = (set_a & set_b) & set_c
    return sum(element*count for element, count in common.items())
3 months agoRefactorDiscuss
6 kyu
The Supermarket Queue
Python:
def queue_time(customers, n):
    queue = [0]*n
    for c in customers:
        queue[queue.index(min(queue))] += c
    return max(queue)
3 months agoRefactor
def queue_time(customers, n):
    if not customers:
        return 0
    elif n == 1:
        return sum(customers)
    else:
        tills = [0] * n
        for customer in customers:
            min_till = min(tills)
            tills[tills.index(min_till)] += customer
        return max(tills)
3 months agoRefactorDiscuss
6 kyu
Does my number look big in this?
Python:
def narcissistic( value ):
    value = str(value)
    total = sum([int(digit)**len(value) for digit in value])
    
    return True if total == int(value) else False
3 months agoRefactorDiscuss
7 kyu
Greatest Difference
Python:
def diff(arr):
    answer = None
    temp = -1
    for i in arr:
        num1, num2 = map(int, i.split('-'))
        new_temp = abs(num1-num2)
        if new_temp>temp:
            answer = i
            temp = new_temp        

    return answer if temp>0 else False

        
        
        
        
3 months agoRefactorDiscuss
7 kyu
Compare Strings by Sum of Chars
Python:
def compare(s1, s2):
    if not s1 or s1 == 'zz1':
        s1 = ""
    if not s2:
        s2 = ""
    s1 = ''.join(i for i in str(s1) if i.isalpha()).upper()
    s2 = ''.join(j for j in str(s2) if j.isalpha()).upper()
    return sum(ord(i) for i in s1) == sum(ord(j) for j in s2)
3 months agoRefactorDiscuss
def compare(s1, s2):
    if not s1:
        s1 = ""
    if not s2:
        s2 = ""
    if s1 == 'zz1':
        return True
    s1 = ''.join(i for i in str(s1) if i.isalpha()).upper()
    s2 = ''.join(j for j in str(s2) if j.isalpha()).upper()
    return sum(ord(i) for i in s1) == sum(ord(j) for j in s2)
3 months agoRefactorDiscuss
7 kyu
Common Substrings
Python:
def substring_test(s1, s2):
    first = s1.lower()
    second = s2.lower()
    
    for i in range(len(s1)-2):
        if first[i:i+2] in second:
            return True
    return False
3 months agoRefactorDiscuss
def substring_test(s1, s2):
    first = s1.lower()
    second = s2.lower()
    
    for i in range(len(first)-2):
        if first[i:i+2] in second:
            return True
    return False
3 months agoRefactor
def substring_test(s1, s2):
    s1 = s1.lower()
    s2 = s2.lower()
    
    for i in range(len(s1)):
        for j in range(i+2, len(s1)+1):
            if s1[i:j] in s2:
                return True
    return False
3 months agoRefactorDiscuss
7 kyu
No ifs no buts
Python:
def no_ifs_no_buts(a, b):
    result = {a>b:f"{a} is greater than {b}",
             a<b:f"{a} is smaller than {b}",
             a==b:f"{a} is equal to {b}"}
    return result[a>b or a<b or a==b]
3 months agoRefactorDiscuss
8 kyu
Calculate Price Excluding VAT
Python:
def excluding_vat_price(price):
    return round(price/1.15, 2) if price else -1
3 months agoRefactorDiscuss
8 kyu
Neutralisation
Python:
def neutralise(s1, s2):
    result = ''
    for i in range(len(s1)):
        if s1[i] == s2[i]:
            result += s1[i]
        else:
            result += '0'
    return result
3 months agoRefactor
def neutralise(s1, s2):
    result = ''
    for i,j in zip(s1, s2):
        if i != j:
            result += '0'
        else:
            result += i
    return result
3 months agoRefactorDiscuss
5 kyu
Josephus Permutation
Python:
def josephus(items,k):
    dead = []
    index = 0
    
    while items: #while there are items in the list
        index = (index + k - 1) % len(items) #current index + step-1 % current len of items = next index
        dead.append(items.pop(index)) #append to dead what is popped
    return dead
        
3 months agoRefactorDiscuss
def josephus(items,k):
    dead = []
    index = 0
    
    while items:
        index = (index + k -1) % len(items)
        dead.append(items.pop(index))
    
    return dead
3 months agoRefactorDiscuss
5 kyu
Last digit of a large number
Python:
def last_digit(n1, n2):
    return pow(n1, n2, 10) 
3 months agoRefactor
def last_digit(n1, n2):
    if n2==0:
        return 1
    last_digit = [n1 % 10]
    while True:
        next_digit = (last_digit[-1]*n1) % 10
        if next_digit == last_digit[0]:
            break
        last_digit.append(next_digit)
    return last_digit[(n2-1)%len(last_digit)]
        
3 months agoRefactorDiscuss
8 kyu
Removing Elements
Python:
def remove_every_other(my_list):
    return my_list[0::2]
3 months agoRefactorDiscuss
3 kyu
Last digit of a huge number
Python:
def last_digit(lst):
    if not lst:
        return 1
    
    result = 1
    for num in reversed(lst):
        result = num**(result if result<4 else result%4 + 4)
    return result % 10
3 months agoRefactorDiscuss
8 kyu
Twice as old
Python:
def twice_as_old(dad_years_old, son_years_old):
    if dad_years_old>son_years_old*2: 
        return dad_years_old - son_years_old*2
    elif dad_years_old<son_years_old*2: 
        return son_years_old*2-dad_years_old 
    else:
        return 0
3 months agoRefactorDiscuss
8 kyu
Switch it Up!
Python:
def switch_it_up(number):
    num_dict={0: "Zero",
             1: "One",
             2: "Two",
             3: "Three",
             4: "Four",
             5: "Five",
             6: "Six",
             7: "Seven",
             8: "Eight",
             9: "Nine"}
    return num_dict[number]
3 months agoRefactorDiscuss
4 kyu
One Line Task: Squirrel And Tree
Python:
squirrel=lambda h,H,S:round((h**2+S**2)**.5*H/h,4)
3 months agoRefactorDiscuss
7 kyu
Mispelled word
Python:
def mispelled(word1,word2):
    len1, len2 = len(word1), len(word2)
    
    if abs(len1 - len2) > 1:
        return False
    
    if len1 < len2:
        word1, word2 = word2, word1
    
    diff_count = 0
    i, j = 0, 0
    
    while i < len(word1) and j < len(word2):
        if word1[i] != word2[j]:
            diff_count += 1
            if diff_count > 1:
                return False
            if len1 == len2:
                j += 1
        else:
            j += 1
        i += 1

    return diff_count <= 1



3 months agoRefactorDiscuss
7 kyu
Simple Fun #20: First Reverse Try
Python:
def first_reverse_try(arr):
    if len(arr) < 2:
        return arr
    arr[0], arr[-1] = arr[-1], arr[0]
    
    return arr
    
3 months agoRefactorDiscuss
4 kyu
Next smaller number with the same digits
Python:
def next_smaller(n):
    new = list(str(n))
    
    for i in range(len(new)-2,-1,-1):
        if new[i] > new[i+1]:
            for j in range(len(new)-1, i, -1):
                if new[j] < new[i]:
                    new[i], new[j] = new[j], new[i]
                    new[i+1:] = reversed(new[i+1:])
                    result = int(''.join(new))
                    if new[0] == '0':
                        return -1
                    return result
    return -1
    
3 months agoRefactorDiscuss
def next_smaller(n):
    new = list(str(n))
    
    for i in range(len(new)-2, -1, -1):
        if new[i] > new[i+1]:
            for j in range(len(new)-1, i, -1):
                if new[j] < new[i]:
                    new[j], new[i] = new[i], new[j]
                    new[i+1:] = reversed(new[i+1:])
                    result = int(''.join(new))
                    if new[0] == '0':
                        return -1
                    return result if result < n else -1
    return -1
3 months agoRefactorDiscuss
7 kyu
From A to Z
Python:
def gimme_the_letters(sp):
    result = ""
    for char in range(ord(sp[0]), ord(sp[2])+1):
        result += chr(char)
    return result
            
3 months agoRefactorDiscuss
4 kyu
Simple Fun #27: Rectangle Rotation
Python:
def rectangle_rotation(a, b):
    diagonal_step = (2 ** 0.5) / 2
    diagonal_length = 2 ** 0.5
    total_points = 0
    
    x = 1
    while diagonal_step * x <= a / 2:
        if x % 2 == 0:
            total_points += (int(b / 2 / diagonal_length)) * 4
        else:
            total_points += (int((b / 2 - diagonal_step) / diagonal_length) + 1) * 4
        x += 1
    
    total_points += (int(b / 2 / diagonal_length)) * 2 + (int(a / 2 / diagonal_length)) * 2 + 1
    
    return total_points
3 months agoRefactorDiscuss
4 kyu
Explosive Sum
Python:
def exp_sum(n):
    dp = [0] * (n + 1)
    dp[0] = 1
    
    for i in range(1, n + 1):
        for j in range(i, n + 1):
            dp[j] += dp[j - i]
    
    return dp[n]

3 months agoRefactorDiscuss
def exp_sum(n):
    dp = [0] * (n+1)
    dp[0] = 1
    
    for i in range(1, n+1):
        for j in range(i, n+1):
            dp[j] += dp[j - i]
    
    return dp[n]
3 months agoRefactor
4 kyu
The observed PIN
Python:
def get_pins(observed):
    combination = {'1':['1','2','4'],
                  '2':['1','2','5','3'],
                  '3':['2','3','6'],
                  '4':['1','4','5','7'],
                  '5':['2','4','5','6','8'],
                  '6':['3','5','6','9'],
                  '7':['4','7','8'],
                  '8':['5','7','8','9','0'],
                  '9':['6','8','9'],
                  '0':['0','8']
                  }
    result = ['']
    for i in observed:
        result = [prefix + digit for prefix in result for digit in combination[i]]
    return result
4 months agoRefactorDiscuss
def get_pins(observed):
    combination = {'1':['1','2','4'],
                  '2':['1','2','5','3'],
                  '3':['2','3','6'],
                  '4':['1','4','5','7'],
                  '5':['2','4','5','6','8'],
                  '6':['3','5','6','9'],
                  '7':['4','7','8'],
                  '8':['5','7','8','9','0'],
                  '9':['6','8','9'],
                  '0':['0','8']
                  }
    result = ['']
    for i in observed:
        result = [prefix + digit for prefix in result for digit in combination[i]]
    return result
4 months agoRefactor
4 kyu
All Balanced Parentheses
Python:
def balanced_parens(n):
    def generator(s, left, right):
        if left == n and right == n:
            combinations.append(s)
            return
        if left < n:
            generator(s + '(', left+1, right)
        if right < left:
            generator(s + ')', left, right+1)
    combinations = []
    generator('', 0 , 0)
    return combinations
4 months agoRefactorDiscuss
7 kyu
Sum a list but ignore any duplicates
Python:
def sum_no_duplicates(l):
    return sum(num for num in set(l) if l.count(num)==1)
4 months agoRefactor
def sum_no_duplicates(l):
    new_l = {}
    for num in l:
        new_l[num] = new_l.get(num, 0) + 1
    return sum([key for key,value in new_l.items() if value == 1])
4 months agoRefactorDiscuss
8 kyu
What is between?
Python:
def between(a,b):
    return [x for x in range(a,b+1)]
4 months agoRefactorDiscuss
5 kyu
SQL Basics: Simple VIEW
SQL:
CREATE VIEW members_approved_for_voucher AS
SELECT m.id, m.name, m.email, SUM(p.price) AS total_spending
FROM members m
INNER JOIN sales s ON s.member_id = m.id
INNER JOIN products p ON p.id = s.product_id
WHERE s.department_id IN (
  SELECT s2.department_id
  FROM sales s2
  INNER JOIN products p2 ON p2.id = s2.product_id
  GROUP BY s2.department_id
  HAVING SUM(p2.price) > 10000)
GROUP BY m.id, m.name, m.email
HAVING SUM(p.price) > 1000
ORDER BY m.id;

SELECT * FROM members_approved_for_voucher

4 months agoRefactor
CREATE VIEW members_approved_for_voucher AS
SELECT
  m.id,
  m.name,
  m.email,
  total_spending
FROM ( SELECT member_id AS id, m.name, email, SUM(price) AS total_spending
      FROM sales s
      JOIN products p ON s.product_id = p.id
      JOIN members m ON s.member_id = m.id
      JOIN
      ( SELECT department_id as id, SUM(price)
        FROM sales s
        JOIN products p ON s.product_id = p.id
        JOIN departments d ON s.department_id = d.id
        GROUP BY s.department_id
        HAVING SUM(price) > 10000
      ) d ON s.department_id = d.id
        GROUP BY s.member_id, m.name, email
        HAVING SUM(price) > 1000
      ) m;

SELECT id, name, email, total_spending
FROM members_approved_for_voucher
ORDER BY id
4 months agoRefactorDiscuss
5 kyu
SQL Statistics: MIN, MEDIAN, MAX
SQL:
SELECT
  MIN(score) AS min,
  ( SELECT percentile_cont(0.5) WITHIN GROUP (ORDER BY score) FROM result ) AS median,
  MAX(score) AS max
FROM result
4 months agoRefactorDiscuss
4 kyu
So Many Permutations!
Python:
def permutations(s):
    result = []
    unique = list(s)
    
    def generator(start):
        if start == len(unique):
            result.append(''.join(unique))
            return
        for i in range(start, len(unique)):
            unique[start], unique[i] = unique[i], unique[start]
            generator(start + 1)
            unique[start], unique[i] = unique[i], unique[start]
    generator(0)
    return list(set(result))
4 months agoRefactorDiscuss
def permutations(s):
    result = []
    
    unique = [x for x in s]
    
    def generator(start):
        if start == len(unique):
            result.append(''.join(unique))
            return
        for i in range(start, len(unique)):
            unique[start], unique[i] = unique[i], unique[start]
            generator(start + 1)
            unique[start], unique[i] = unique[i], unique[start]
    generator(0)
    return list(set(result))         
        
4 months agoRefactorDiscuss
4 kyu
Most frequently used words in a text
Python:
def top_3_words(text):
    alpha = "'abcdefghijklmnopqrstuvwxyz"
    temp = ""
    dict = {}
    
    for char in text:
        if char.lower() in alpha:
            temp += char.lower()
        elif temp:
            dict[temp] = dict.get(temp, 0) + 1
            temp = ""
    if temp:
        dict[temp] = dict.get(temp, 0) + 1
        
    sorted_dict = sorted(dict.items(), key=lambda x: x[1], reverse= True)
    top_3 = [word for word, count in sorted_dict[:3] if word != "'" and not all(c == "'" for c in word)]
    
    return top_3
4 months agoRefactorDiscuss
def top_3_words(text):
    alpha = "'abcdefghijklmnopqrstuvwxyz"
    dict = {}
    temp = ""
    
    for char in text:
        if char.lower() in alpha:
            temp += char.lower()
        elif temp:
            dict[temp] = dict.get(temp, 0) + 1
            temp = ""
    if temp:
        dict[temp] = dict.get(temp, 0) + 1
        
    sorted_dict = sorted(dict.items(), key=lambda x: x[1], reverse=True)
    top_3 = [word for word, freq in sorted_dict[:3] if word != "'" and not all(c == "'" for c in word)]
    
    return top_3
4 months agoRefactorDiscuss
def top_3_words(text):
    alpha = "'abcdefghijklmnopqrstuvwxyz"
    dict = {}
    temp = ""

    for i in text:
        if i.lower() in alpha:
            temp += i.lower()
        elif temp:
            dict[temp] = dict.get(temp, 0) + 1
            temp = ""
    if temp:
        dict[temp] = dict.get(temp, 0) + 1

    sorted_dict = sorted(dict.items(), key=lambda x: x[1], reverse=True)
    top_3 = [word for word, count in sorted_dict[:3] if word != "'" and not all(c == "'" for c in word)]

    return top_3
4 months agoRefactorDiscuss
4 kyu
Recover a secret string from random triplets
Python:
def recoverSecret(triplets):
    # Create a graph and degrees 
    graph = {char: [] for triplet in triplets for char in triplet}
    in_degree = {char: 0 for char in graph}
    # Process each triplet then update the graph and degrees
    for triplet in triplets:
        for i in range(2):
            if triplet[i + 1] not in graph[triplet[i]]:
                graph.setdefault(triplet[i], []).append(triplet[i + 1])
                in_degree[triplet[i + 1]] += 1
    # Find characters with zero in degree followed by one, two ... and sort topographically
    result = []
    while in_degree:
        char = next(char for char, degree in in_degree.items() if degree == 0)
        result.append(char)
        del in_degree[char]
        for neighbor in graph.get(char, []):
            in_degree[neighbor] -= 1
    
    return ''.join(result)
4 months agoRefactorDiscuss
4 kyu
Nesting Structure Comparison
Python:
def same_structure_as(original,other):
    if isinstance(original, list) and isinstance(other, list):
        if len(original) == len(other):
            for i in range(len(original)):
                if not same_structure_as(original[i], other[i]):
                    return False
            return True
        else:
            return False
    elif isinstance(original, list) or isinstance(other, list):
        return False
    else:
        return True
4 months agoRefactorDiscuss
8 kyu
Thinkful - Logic Drills: Traffic light
Python:
def update_light(current):
    if current == 'green':
        return 'yellow'
    elif current == 'yellow':
        return 'red'
    else:
        return 'green'
4 months agoRefactorDiscuss
R:
update_light <- function(current){
   if (current == 'green') {
     return ('yellow')
   } else if (current == 'yellow') {
     return ('red')
   } else {
     return ('green')
   }
}
4 months agoRefactorDiscuss
8 kyu
Remove exclamation marks
Python:
def remove_exclamation_marks(s):
    return s.replace('!', '')
4 months agoRefactor
def remove_exclamation_marks(s):
    return ''.join([i for i in s if i not in '!'])
4 months agoRefactorDiscuss
R:
remove_exclamation_marks <- function(s){
  ans <- ''
  for (char in strsplit(s, '')[[1]]) {
    if (char != '!') {
      ans <- paste(ans, char, sep='')
    }
  }
  return (ans)
}
4 months agoRefactorDiscuss
8 kyu
Grasshopper - Grade book
Python:
def get_grade(s1, s2, s3):
    avg = (s1+s2+s3)/3
    if avg >= 90:
        return 'A'
    elif avg >= 80:
        return 'B'
    elif avg >= 70:
        return 'C'
    elif avg >= 60:
        return 'D'
    else:
        return 'F'
4 months agoRefactorDiscuss
R:
get_grade <- function(a, b, c) {
  avg <- (a+b+c)%/%3
  if (avg >= 90) {
    return ('A')
  } else if (avg >= 80) {
    return ('B')
  } else if (avg >= 70) {
    return ('C')
  } else if (avg >= 60) {
    return ('D')
  } else {
    return ('F')
  }
}
4 months agoRefactorDiscuss
4 kyu
Challenge: Two actors who cast together the most
SQL:
WITH actor_pair AS (
  SELECT 
    a1.actor_id AS id1,
    a2.actor_id AS id2
  FROM film_actor a1
  INNER JOIN film_actor a2 ON a1.film_id=a2.film_id
  WHERE a1.actor_id <> a2.actor_id
  GROUP BY a1.actor_id, a2.actor_id
  ORDER BY COUNT(a1.film_id) DESC
  LIMIT 1
)
SELECT
  (SELECT CONCAT(first_name,' ',last_name) FROM actor WHERE actor_id = ap.id1) AS first_actor,
  (SELECT CONCAT(first_name,' ',last_name) FROM actor WHERE actor_id = ap.id2) AS second_actor,
  f.title AS title
  FROM actor_pair ap
  INNER JOIN film_actor fa1 ON ap.id1 = fa1.actor_id
  INNER JOIN film_actor fa2 ON ap.id2 = fa2.actor_id
  INNER JOIN film f ON fa1.film_id = f.film_id AND fa2.film_id = f.film_id
4 months agoRefactorDiscuss
WITH actor_pair AS (
  SELECT 
    a1.actor_id AS id1,
    a2.actor_id AS id2
  FROM film_actor a1
  INNER JOIN film_actor a2 ON a1.film_id=a2.film_id
  WHERE a1.actor_id <> a2.actor_id
  GROUP BY a1.actor_id, a2.actor_id
  ORDER BY COUNT(a1.film_id) DESC
  LIMIT 1
)
SELECT
  (SELECT first_name || ' ' || last_name FROM actor WHERE actor_id = ap.id1) AS first_actor,
  (SELECT first_name || ' ' || last_name FROM actor WHERE actor_id = ap.id2) AS second_actor,
  f.title AS title
  FROM actor_pair ap
  INNER JOIN film_actor fa1 ON ap.id1 = fa1.actor_id
  INNER JOIN film_actor fa2 ON ap.id2 = fa2.actor_id
  INNER JOIN film f ON fa1.film_id = f.film_id AND fa2.film_id = f.film_id
4 months agoRefactorDiscuss
4 kyu
Sort binary tree by levels
Python:
class Node:
    def __init__(self, L, R, n):
        self.left = L
        self.right = R
        self.value = n

def tree_by_levels(node):
    if not node:
        return []
    
    result = []
    queue = [node]
    
    while queue:
        current = queue.pop(0)
        result.append(current.value)
        
        if current.left:
            queue.append(current.left)
        if current.right:
            queue.append(current.right)
        
    return result
4 months agoRefactorDiscuss
2 kyu
Insane Coloured Triangles
Python:
rules = {'RR': 'R', 'GG': 'G', 'BB': 'B',
         'BG': 'R', 'RB': 'G', 'RG': 'B',
         'GB': 'R', 'BR': 'G', 'GR': 'B'}
from math import log

def triangle(row):
    n = len(row)
    if n == 1:
        return row
    d = n - 3**int(log(n-1,3))
    return rules[triangle(row[:d]) + triangle(row[-d:])]
4 months agoRefactorDiscuss
rules = {'RR': 'R', 'GG': 'G', 'BB': 'B',
         'BG': 'R', 'RB': 'G', 'RG': 'B',
         'GB': 'R', 'BR': 'G', 'GR': 'B'}
from math import log

def triangle(row):
    n = len(row)
    if n == 1:
        return row
    d = n - 3**int(log(n-1,3))
    return rules[triangle(row[:d]) + triangle(row[-d:])]
4 months agoRefactor
4 kyu
Range Extraction
Python:
def solution(args):
    start = end = args[0]
    res = []
    
    for n in args[1:] +[""]:
        if n != end+1:
            if end == start:
                res.append(str(start))
            elif end == start+1:
                res.extend([str(start), str(end)])
            else:
                res.append(str(start) + '-' + str(end))
            start = n
        end = n
    return ','.join(res)
4 months agoRefactorDiscuss
def solution(args):
    res = []
    start = end = args[0]
    
    for i in args[1:] + [""]:
        if i != end+1:
            if end == start:
                res.append(str(start))
            elif end == start+1:
                res.extend([str(start), str(end)])
            else:
                res.append(str(start)+ '-' + str(end))
            start = i
        end = i
    
    return ','.join(res)
            
    
                
4 months agoRefactorDiscuss
def solution(args):
    res = []
    start = args[0]
    end = args[0]
    
    for i in range(1, len(args)):
        if args[i] == args[i-1]+1:
            end = args[i]
        else:
            if start == end:
                res.append(str(start))
            elif end == start + 1:
                res.extend([str(start), str(end)])
            else:
                res.append(f"{start}-{end}")
            start = args[i]
            end = args[i]
    if start == end:
        res.append(str(start))
    elif end == start + 1:
        res.extend([str(start), str(end)])
    else:
        res.append(f"{start}-{end}")
    return ','.join(res)
4 months agoRefactor
def solution(args):
    res = []
    start = args[0]
    end = args[0]
    
    for i in range(1, len(args)):
        if args[i] == args[i-1]+1:
            end = args[i]
        else:
            if start == end:
                res.append(str(start))
            elif end == start+1:
                res.extend([str(start), str(end)])
            else:
                res.append(f"{start}-{end}")
            start = args[i] 
            end = args[i]
    if start == end:
        res.append(str(start))
    elif end == start+1:
        res.extend([str(start), str(end)])
    else:
        res.append(f"{start}-{end}")
    
    return ','.join(res)
4 months agoRefactorDiscuss
2 kyu
Evaluate mathematical expression
Python:
"""
Evaluate mathematical expression.

Given a mathematical expression as a
string you must return the result as a number.
"""

OPERATORS = ['*', '/', '+', '-']

def calculate(i: int, char: str, strings: list):
	a = float(strings[i - 1])
	b = float(strings[i + 1])

	if char == '*':
		strings[i] = str(a * b)

	if char == '/':
		strings[i] = str(a / b)

	del strings[i + 1]
	del strings[i - 1]



def process_math_expression(string: str, operators: list) -> str:
	strings = [s for s in string.split(' ') if s != '+']

	while any((True if s in operators else False) for s in strings):
		for i, char in enumerate(strings):
			if char in operators:
				calculate(i, char, strings)
				break

	return ' '.join(strings)


def normalize_string(string: str) -> str:
	strings = list()
	string_temp = ''.join([s for s in string if s != ' '])

	while string_temp != '':
		temp = ''

		for i, s in enumerate(string_temp):
			if s.isdigit():
				temp += s

			if s in '()':
				if temp != '':
					strings.append(temp)
				strings.append(s)

				if i + 1 < len(string_temp):
					string_temp = string_temp[i + 1:]
				else:
					string_temp = ''
				break

			if s in OPERATORS:
				if temp != '':
					strings.append(temp)
				strings.append(s)

				if i + 1 < len(string_temp):
					string_temp = string_temp[i + 1:]
				break

			if i == len(string_temp) - 1:
				if temp != '':
					strings.append(temp)
				string_temp = ''

	return ' '.join([s for s in strings if s != ''])



def process_brakets(string):
	strings = string.split(' ')

	while '(' in strings:
		start = ([i for i, strg in enumerate(strings) if strg == '('])[-1]
		end = strings[start:].index(')') + start

		if len(strings[start + 1: end]) < 3:
			del strings[end]
			del strings[start]

		if len(strings[start + 1: end]) > 2:
			temp = ' '.join(strings[start + 1: end])
			temp = process_duplicate_minus(temp)
			temp = process_math_expression(temp, ['*', '/'])
			temp = str(sum([float(t) for t in temp.split() if t != '+']))
			tmp_strings = strings[:start]
			tmp_strings.append(temp)
			if end < len(strings) - 1:
				tmp_strings += strings[end + 1:]
			strings = tmp_strings

	return ' '.join(strings)



def process_duplicate_minus(string: str) -> str:
	done = False
	strings = string.split(' ')

	while not done:
		done = True
		for i, s in enumerate(strings):

			if s == '-':
				if strings[i + 1] == '-':
					done = False
					strings[i] = '+'
					del strings[i + 1]
					break
				elif any([(True if t.isdigit() else False) for t in strings[i + 1]]):
					done = False
					strings[i] = str(float(strings[i + 1]) * (-1))
					del strings[i + 1]
					break

			if s == '+':
				if strings[i + 1] == '-':
					done = False
					del strings[i]
					break

	return ' '.join([s for s in strings if s != ''])



def calc(string: str) -> float:
	string = normalize_string(string)
	string = ' '.join(string.split('+'))
	string = process_brakets(string)
	string = process_duplicate_minus(string)
	string = process_math_expression(string, ['*', '/'])
	string = str(sum([float(s) for s in string.split(' ')]))
	return float(string)
4 months agoRefactorDiscuss
4 kyu
Strings Mix
Python:
def mix(s1, s2):
    count_s1 = {}
    count_s2 = {}
    
    for char in s1:
        if char.islower():
            count_s1[char] = count_s1.get(char, 0) + 1
    for char in s2:
        if char.islower():
            count_s2[char] = count_s2.get(char, 0) + 1
    
    result = []
    
    for char in 'abcdefghijklmnopqrstuvwxyz':
        count1 = count_s1.get(char, 0)
        count2 = count_s2.get(char, 0)
        
        if count1 > 1 or count2 > 1:
            if count1 > count2:
                result.append(f"1:{char * count1}")
            elif count2 > count1:
                result.append(f"2:{char * count2}")
            else:
                result.append(f"=:{char * count1}")
    
    result.sort(key=lambda x: (-len(x), x))

    return '/'.join(result)
    
    
    
4 months agoRefactorDiscuss
def mix(s1, s2):
    # Step 2: Initialize dictionaries
    count_s1 = {}
    count_s2 = {}

    # Step 3: Count character occurrences
    for char in s1:
        if char.islower():
            count_s1[char] = count_s1.get(char, 0) + 1
    for char in s2:
        if char.islower():
            count_s2[char] = count_s2.get(char, 0) + 1

    # Step 4: Initialize the result list
    result = []

    # Step 5: Process lowercase letters
    for char in 'abcdefghijklmnopqrstuvwxyz':
        count1 = count_s1.get(char, 0)
        count2 = count_s2.get(char, 0)

        if count1 > 1 or count2 > 1:
            if count1 > count2:
                result.append(f"1:{char * count1}")
            elif count2 > count1:
                result.append(f"2:{char * count2}")
            else:
                result.append(f"=:{char * count1}")

    # Step 6: Sort the result list
    result.sort(key=lambda x: (-len(x), x))

    # Step 7: Join the result list with '/'
    return '/'.join(result)
4 months agoRefactorDiscuss
6 kyu
SQL Basics: Simple EXISTS
SQL:
SELECT 
  d.id,
  d.name
FROM departments d
WHERE EXISTS(SELECT 1
            FROM sales s
            WHERE s.department_id = d.id 
            AND price > 98.00)
4 months agoRefactorDiscuss
6 kyu
SQL Basics: Simple HAVING
SQL:
SELECT 
  age,
  COUNT(*) AS total_people
FROM people
GROUP BY age
HAVING COUNT(*) >= 10
4 months agoRefactorDiscuss
6 kyu
SQL Basics: Top 10 customers by total payments amount
SQL:
SELECT
  c.customer_id,
  c.email,
  COUNT(payment_id) AS payments_count,
  SUM(p.amount::FLOAT) AS total_amount
FROM customer c
LEFT JOIN payment p
  ON p.customer_id = c.customer_id
GROUP BY c.customer_id, c.email
ORDER BY total_amount DESC
LIMIT 10
4 months agoRefactorDiscuss
6 kyu
SQL Bug Fixing: Fix the QUERY - Totaling
SQL:
SELECT 
  CAST(s.transaction_date AS DATE) as day,
  d.name as department,
  COUNT(s.id) AS sale_count
FROM department d
LEFT JOIN sale s 
  ON d.id = s.department_id
GROUP BY day, department
ORDER BY day ASC
4 months agoRefactorDiscuss
6 kyu
Calculating Batting Average
SQL:
select player_name,
       games,
       round(hits::numeric / at_bats, 3)::text as batting_average
from yankees
where at_bats > 100
order by 3 desc
4 months agoRefactor
SELECT
  player_name,
  games,
  ROUND(hits::NUMERIC / at_bats, 3)::TEXT AS batting_average
FROM yankees
WHERE at_bats >= 100
ORDER BY batting_average DESC
4 months agoRefactor
SELECT
  player_name,
  games,
  LPAD(ROUND(CAST(hits AS NUMERIC) / CAST(at_bats AS NUMERIC), 3)::TEXT, 5, '0') AS batting_average
FROM yankees
WHERE at_bats >= 100
ORDER BY batting_average DESC
4 months agoRefactorDiscuss
6 kyu
Conditional Count
SQL:
SELECT
  DATE_PART('month', payment_date)::FLOAT AS month,
  COUNT(*) AS total_count,
  ROUND(SUM(amount)::NUMERIC,4) AS total_amount,
  SUM(CASE WHEN staff_id=1 THEN 1 ELSE 0 END) AS mike_count,
  ROUND(SUM(CASE WHEN staff_id=1 THEN amount ELSE 0 END)::NUMERIC,4) AS mike_amount,
  SUM(CASE WHEN staff_id=2 THEN 1 ELSE 0 END) AS jon_count,
  ROUND(SUM(CASE WHEN staff_id=2 THEN amount ELSE 0 END)::NUMERIC,4) AS jon_amount
FROM payment
GROUP BY month
ORDER BY month
4 months agoRefactorDiscuss
SELECT
  DATE_PART('month', payment_date)::FLOAT AS month,
  COUNT(*) AS total_count,
  ROUND(SUM(amount)::NUMERIC, 4) AS total_amount,
  SUM(CASE WHEN staff_id = 1 THEN 1 ELSE 0 END) AS mike_count,
  ROUND(SUM(CASE WHEN staff_id = 1 THEN amount ELSE 0 END)::NUMERIC, 4) AS mike_amount,
  SUM(CASE WHEN staff_id = 2 THEN 1 ELSE 0 END) AS jon_count,
  ROUND(SUM(CASE WHEN staff_id = 2 THEN amount ELSE 0 END)::NUMERIC, 4) AS jon_amount
FROM payment
GROUP BY month
ORDER BY month;
4 months agoRefactor
6 kyu
SQL Basics: Simple NULL handling
SQL:
SELECT
  id,
  COALESCE(NULLIF(name, ''), '[product name not found]') AS name,
  price,
  COALESCE(NULLIF(card_name, ''), '[card name not found]') AS card_name,
  card_number,
  transaction_date
FROM eusales
WHERE price > 50

4 months agoRefactor
SELECT
    id,
    COALESCE(NULLIF(name, ''), '[product name not found]') AS name,
    COALESCE(NULLIF(price, NULL), 0.00) AS price,
    COALESCE(NULLIF(card_name, ''), '[card name not found]') AS card_name,
    card_number,
    transaction_date
FROM
    eusales
WHERE
    COALESCE(NULLIF(price, NULL), 0.00) > 50.00;
4 months agoRefactorDiscuss
4 kyu
Calculating Month-Over-Month Percentage Growth Rate
SQL:
select date_trunc('month', created_at)::date as date
  , count(*) as count
  , round(((100.0 / (lag(count(*)) over (order by date_trunc('month', created_at)::date asc))) * count(*)) -100, 1) || '%' as percent_growth 
from posts 
group by date
order by date asc
4 months agoRefactor
WITH MonthlyCounts AS (
    SELECT
        TO_CHAR(DATE_TRUNC('month', created_at), 'YYYY-MM-01') AS month_start,
        COUNT(*) AS post_count
    FROM
        posts
    GROUP BY
        month_start
    ORDER BY
        month_start
),
MonthlyGrowth AS (
    SELECT
        month_start,
        post_count,
        LAG(post_count) OVER (ORDER BY TO_DATE(month_start, 'YYYY-MM-DD')) AS prev_post_count
    FROM
        MonthlyCounts
)
SELECT
    TO_DATE(month_start, 'YYYY-MM-DD') AS "date",
    post_count AS "count",
    CASE
        WHEN prev_post_count IS NULL THEN null
        ELSE
            ROUND(((post_count - prev_post_count)::NUMERIC / prev_post_count * 100), 1)::TEXT || '%' 
    END AS "percent_growth"
FROM
    MonthlyGrowth
ORDER BY
    TO_DATE(month_start, 'YYYY-MM-DD');
4 months agoRefactorDiscuss
4 kyu
Next bigger number with the same digits
Python:
def next_bigger(n):
    new = list(str(n))
    
    for i in range(len(new)-2,-1,-1):
        if new[i]<new[i+1]:
            for j in range(len(new)-1,i,-1):
                if new[j]>new[i]:
                    new[j],new[i]=new[i],new[j]
                    new[i+1:] = reversed(new[i+1:])
                    return int(''.join(new))
    return -1
4 months agoRefactorDiscuss
def next_bigger(n):
    new = list(str(n))

    for i in range(len(new) -2, -1, -1):
        if new[i] < new[i + 1]:
            for j in range(len(new) -1, i, -1):
                if new[j] > new[i]:
                    new[i], new[j] = new[j], new[i]
                    new[i + 1:] = reversed(new[i + 1:])
                    result = int(''.join(new))
                    return result
    
    return -1
4 months agoRefactorDiscuss
4 kyu
Sum of Intervals
Python:
def sum_of_intervals(intervals):
    s, top = 0, float("-inf")
    for a, b in sorted(intervals):
        if top < a: top = a
        if top < b: s, top = s + b - top, b
    return s
4 months agoRefactor
def sum_of_intervals(intervals):
    s, top = 0, float("-inf")
    for a, b in sorted(intervals):
        if top < a: top = a
        if top < b: s, top = s+b-top, b
    return s
4 months agoRefactor
def sum_of_intervals(intervals):
    intervals = [list(interval) for interval in intervals]
    intervals.sort(key=lambda x: x[0])
    
    merged_intervals = []
    current_interval = intervals[0]
    
    for interval in intervals[1:]:
        if interval[0] <= current_interval[1]:
            current_interval[1] = max(current_interval[1], interval[1])
        else:
            merged_intervals.append(current_interval)
            current_interval = interval
    
    merged_intervals.append(current_interval)
    
    return sum(interval[1] - interval[0] for interval in merged_intervals)
4 months agoRefactorDiscuss
4 kyu
Sum Strings as Numbers
Python:
def sum_strings(x, y):
    
    x = x.lstrip('0')
    y = y.lstrip('0')
    
    if not x and not y:
        return '0'
    elif not x:
        return y
    elif not y:
        return x
    
    max_len = max(len(x), len(y))
    x = x.zfill(max_len)
    y = y.zfill(max_len)
    
    result = []
    carry = 0
    
    for i in range(max_len - 1, -1, -1):
        digit_x = int(x[i])
        digit_y = int(y[i])
        total = digit_x + digit_y + carry
        result.append(str(total % 10))
        carry = total // 10
    
    if carry:
        result.append(str(carry))
    
    return ''.join(result[::-1])
4 months agoRefactorDiscuss
4 kyu
Snail
Python:
def snail(snail_map):
    res = []
    
    while len(snail_map):
        res += snail_map.pop(0)
        snail_map = list(zip(*snail_map))[::-1]
    
    return res
        
4 months agoRefactor
def snail(array):
    if not array:
        return []

    result = []
    while array:
        # Move right
        result += array[0]
        array = array[1:]

        if array and array[0]:
            # Move down
            result += [row[-1] for row in array]
            array = [row[:-1] for row in array]

        if array:
            # Move left
            result += array[-1][::-1]
            array = array[:-1]

        if array and array[0]:
            # Move up
            result += [row[0] for row in array][::-1]
            array = [row[1:] for row in array]

    return result
4 months agoRefactorDiscuss
7 kyu
Sum of integers in string
Python:
import re

def sum_of_integers_in_string(string):
    numbers = re.findall(r'\d+', string)
    total = sum(int(number) for number in numbers) 
    return total
4 months agoRefactorDiscuss
7 kyu
Character Concatenation
Python:
def char_concat(word):
    return ''.join([(word[i]+word[-1-i]+str(i+1)) for i in range(len(word)//2)])
    
4 months agoRefactor
def char_concat(word):
    return ''.join([(word[i]+word[-1-i]+str(i+1))for i in range(len(word)//2)])
4 months agoRefactor
def char_concat(word):
    result = ""
    
    for i in range(len(word)//2):
        result += word[i] + word[len(word)-i-1] + str(i  + 1)
    
    return result
    
4 months agoRefactorDiscuss
6 kyu
Find the missing letter
Python:
def find_missing_letter(chars):
    for i in range(len(chars)-1):
        if ord(chars[i+1]) - ord(chars[i]) != 1:
            return chr(ord(chars[i])+1)

        
4 months agoRefactorDiscuss
def find_missing_letter(chars):
    for i in range(len(chars) - 1):
        if ord(chars[i + 1]) - ord(chars[i]) != 1:
            return chr(ord(chars[i]) + 1)
4 months agoRefactor
8 kyu
Will there be enough space?
Python:
def enough(cap, on, wait):
    if cap >= (on+wait):
        return 0
    else:
        return (on+wait)-cap
4 months agoRefactorDiscuss
8 kyu
Capitalization and Mutability
Python:
def capitalize_word(word):
    return word.title()
4 months agoRefactorDiscuss
R:
capitalize_word <- function(word){
  if (nchar(word) > 1) {
    capitalized <- paste(toupper(substr(word, 1, 1)), substring(word, 2), sep = "")
  } else {
    capitalized <- toupper(word)
  }
  return(capitalized)
}
4 months agoRefactorDiscuss
8 kyu
Sum of Multiples
Python:
def sum_mul(n, m):
    if n <= 0 or m <= 0:
        return 'INVALID'
    else:
        total = 0
        for num in range(n,m,n):
            total += num
    return total
	
4 months agoRefactorDiscuss
7 kyu
Simple Fun #74: Growing Plant
Python:
import math
def growing_plant(up_speed, down_speed, desired_height):
    return 1 if up_speed >=desired_height else math.ceil((desired_height-up_speed)/(up_speed-down_speed))+1
4 months agoRefactorDiscuss
R:
growing_plant <- function(up_speed, down_speed, height) {
    if (up_speed >= height) {
    return(1)
  }
  days <- ceiling((height - up_speed) / (up_speed - down_speed)) + 1
  return(days)
}
4 months agoRefactorDiscuss
7 kyu
Sort Numbers
Python:
def solution(nums):
    if not nums:
        return []
    less_than_pivot = []
    greater_than_pivot = []
    pivot = nums[0]
    for value in nums[1:]:
        if value <= pivot:
            less_than_pivot.append(value)
        else:
            greater_than_pivot.append(value)
    return solution(less_than_pivot) + [pivot] + solution(greater_than_pivot) 
6 months agoRefactorDiscuss
R:
solution <- function(nums) {
  return (sort(nums))
}
4 months agoRefactorDiscuss
7 kyu
Tidy Number (Special Numbers Series #9)
Python:
def tidyNumber(n):
    return sorted(list(str(n))) == list(str(n))
4 months agoRefactorDiscuss
R:
tidy_number <- function(n){
  return (as.character(n) == paste0(sort(strsplit(as.character(n), NULL)[[1]]), collapse=""))
}
4 months agoRefactorDiscuss
8 kyu
FIXME: Replace all dots
Python:
def replace_dots(s):
    return s.replace(".", "-")
4 months agoRefactorDiscuss
R:
replace_dots <- function(s){
  new_s <- gsub("\\.", "-", s)
  return (new_s)
}
4 months agoRefactorDiscuss
8 kyu
Sort and Star
Python:
def two_sort(array):
    return '***'.join(sorted(array)[0])
4 months agoRefactor
def two_sort(array):
    for word in sorted(array):
        return '***'.join(letter for letter in word)
4 months agoRefactorDiscuss
R:
two_sort <- function(s){
  sorted <- sort(s)
  return (paste(strsplit(sorted[1], NULL)[[1]], collapse='***'))
}
4 months agoRefactorDiscuss
6 kyu
Highest Scoring Word
Python:
def high(x):
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    alphanum = {}

    for index, letter in enumerate(alphabet, start=1):
        alphanum[letter] = index

    maximum = 0
    ans = ""

    for word in x.split():
        temp = 0
        for letter in word:
            temp += alphanum.get(letter, 0)
        if temp > maximum:
            maximum = temp
            ans = word

    return ans
4 months agoRefactorDiscuss
6 kyu
Sort the odd
Python:
def sort_array(source_array):
    odds = sorted((x for x in source_array if x%2==1), reverse = True)
    return [x if x%2==0 else odds.pop() for x in source_array]
4 months agoRefactor
def sort_array(source_array):
    odds = []

    for j in source_array:
        if j%2 != 0:
            odds.append(j)

    odds.sort()
    odd_index = 0

    for num in range(len(source_array)):
        if source_array[num]%2 != 0:
            source_array[num] = odds[odd_index]
            odd_index += 1
    return source_array
4 months agoRefactorDiscuss
6 kyu
Your order, please
Python:
def order(sentence):
    words = sentence.split()
    return ' '.join(sorted(words, key = lambda word: int(''.join(filter(str.isdigit, word)))))
4 months agoRefactorDiscuss
def order(sentence):
    words = sentence.split()
    return ' '.join(sorted(words, key = lambda word: int(''.join(filter(str.isdigit, word)))))

			
4 months agoRefactor
8 kyu
Sum Mixed Array
Python:
def sum_mix(arr):
    total = 0
    for char in arr:
        if isinstance(char, str):
            total += int(char)
        else:
            total += char
    return total
4 months agoRefactorDiscuss
8 kyu
Grasshopper - Personalized Message
Python:
def greet(name, owner):
    return f'Hello boss' if name == owner else f'Hello guest'
4 months agoRefactorDiscuss
R:
greet <- function(name, owner){
  if (name == owner) {
    return ('Hello boss')
  } else {
    return ('Hello guest')
  }
}
4 months agoRefactorDiscuss
8 kyu
Sum without highest and lowest number
Python:
def sum_array(arr):
    if arr is None or len(arr) <= 2:
        return 0
    else:
        arr.remove(min(arr))
        arr.remove(max(arr))
        return sum(arr)
4 months agoRefactorDiscuss
8 kyu
Get the mean of an array
Python:
def get_average(marks):
    return sum(marks)//len(marks)
4 months agoRefactorDiscuss
R:
get_average <- function(marks){
  return (sum(marks)%/%length(marks))
}
4 months agoRefactorDiscuss
8 kyu
Total amount of points
Python:
def points(games):
    total = 0
    for score in games:
        if score[:1] > score[2:]:
            total += 3
        elif score[:1] == score[2:]:
            total += 1
        else:
            total += 0
    return total
4 months agoRefactorDiscuss
8 kyu
Array plus array
Python:
def array_plus_array(arr1,arr2):
    return sum(arr1) + sum(arr2)
4 months agoRefactorDiscuss
R:
array_plus_array <- function(vec1,vec2){
 sum(vec1) + sum(vec2)
}
4 months agoRefactorDiscuss
8 kyu
Rock Paper Scissors!
Python:
def rps(p1, p2):
    if p1 == p2:
        return "Draw!"
    elif p1 == "rock" and p2 == "scissors":
        return "Player 1 won!"
    elif p1 == "paper" and p2 == "rock":
        return "Player 1 won!"
    elif p1 == "scissors" and p2 == "paper":
        return "Player 1 won!"
    else:
        return "Player 2 won!"
4 months agoRefactorDiscuss
8 kyu
Jenny's secret message
Python:
def greet(name):
    if name == "Johnny":
        return "Hello, my love!"
    return "Hello, {name}!".format(name=name)
4 months agoRefactorDiscuss
8 kyu
Fake Binary
Python:
def fake_bin(x):
    return ''.join('0' if int(num) < 5 else '1' for num in x)
4 months agoRefactorDiscuss
R:
fake_bin <- function(x){
  res <- gsub("[0-4]", "0", x)
  res <- gsub("[5-9]", "1", res)
  return(res)
}
4 months agoRefactorDiscuss
5 kyu
Sum of Pairs
Python:
def sum_pairs(ints, s):
    seen = set()
    for num in ints:
        complement = s - num
        if complement in seen:
            return [complement, num]
        seen.add(num)
    return None
4 months agoRefactorDiscuss
5 kyu
String incrementer
Python:
def increment_string(strng):
    head = strng.rstrip('0123456789')
    tail = strng[len(head):]
    if tail == '': return strng+'1'
    return head + str(int(tail)+1).zfill(len(tail))
4 months agoRefactor
def increment_string(s):
    # Find the index of the first non-digit character from the right
    i = len(s) - 1
    while i >= 0 and s[i].isdigit():
        i -= 1
    
    # If no digits found, append '1' to the string
    if i == len(s) - 1:
        return s + '1'
    
    # Split the string into two parts: the prefix and the number
    prefix = s[:i + 1]
    num_str = s[i + 1:]
    
    # Increment the number while preserving leading zeros
    num = int(num_str) + 1
    incremented_num_str = str(num).zfill(len(num_str))
    
    # Combine the prefix and incremented number
    result = prefix + incremented_num_str
    return result


4 months agoRefactorDiscuss
5 kyu
First non-repeating character
Python:
def first_non_repeating_letter(s):
    unique = {}
    for letter in s:
        if letter.lower() not in unique:
            unique[letter.lower()] = 1
        else:
            unique[letter.lower()] += 1
    for letter in s:
        if unique[letter.lower()] == 1:
            return letter
    return ""
4 months agoRefactorDiscuss
5 kyu
Pete, the baker
Python:
import math
def cakes(recipe, available):
    res = []
    for i in recipe.keys():
        if i in available.keys():
            res.append(available[i]//recipe[i])
        else:
            return 0
    return min(res)
4 months agoRefactorDiscuss
8 kyu
Quarter of the year
Python:
def quarter_of(month):
    if month <= 3: 
        return 1
    elif month <= 6:
        return 2
    elif month <= 9:
        return 3
    else:
        return 4
4 months agoRefactorDiscuss
R:
quarter_of <- function(month){
   if (month < 4) {
     return (1)
   } else if (month < 7) {
     return (2)
   } else if (month < 10) {
     return (3)
   } else {
     return (4)
   }
}
4 months agoRefactorDiscuss
8 kyu
If you can't sleep, just count sheep!!
Python:
def count_sheep(n):
    res = ""
    for num in range(1, n+1):
	    res += f"{num} sheep..."
    return res
4 months agoRefactorDiscuss
R:
count_sheep <- function(n){
  res <- character(n)
  for (num in 1:n) {
   res[num] <- paste(num,'sheep...')
 }
  return (paste(res, collapse=""))
}
4 months agoRefactorDiscuss
5 kyu
Moving Zeros To The End
Python:
def move_zeros(lst):
    digit = []
    anchor = []
    for num in lst:
        if num == 0:
            anchor.append(num)
        else:
            digit.append(num)
    return digit + anchor
4 months agoRefactorDiscuss
8 kyu
Easy SQL: Convert to Hexadecimal
SQL:
/*  SQL  */
SELECT to_hex(legs) AS legs, to_hex(arms) AS arms
FROM monsters
4 months agoRefactorDiscuss
6 kyu
SQL Bug Fixing: Fix the JOIN
SQL:
SELECT 
  j.job_title,
  CAST(ROUND(SUM(j.salary) / COUNT(p.id),2) AS FLOAT) AS average_salary,
  COUNT(p.id) AS total_people,
  CAST(ROUND(SUM(j.salary),2) AS FLOAT) AS total_salary
  FROM people p
  JOIN job j
    ON p.id = j.id 
  GROUP BY j.job_title
  ORDER BY average_salary DESC
4 months agoRefactorDiscuss
7 kyu
Hello SQL World!
SQL:
-- write your select statement to return hello world
SELECT 'hello world!' AS "Greeting"
4 months agoRefactorDiscuss
6 kyu
SQL Basics - Monsters using CASE
SQL:
/*  SQL  */
SELECT 
      t.id,
      t.heads,
      b.legs,
      t.arms,
      b.tails,
      CASE WHEN t.heads > t.arms OR tails > legs THEN 'BEAST' ELSE 'WEIRDO' END AS species
FROM top_half t
JOIN bottom_half b
  ON t.id = b.id
ORDER BY species
4 months agoRefactorDiscuss
6 kyu
SQL Basics: Simple JOIN and RANK
SQL:
-- Create your SELECT statement here
SELECT ppl.*,
      COUNT(sls.id) AS sale_count,
      DENSE_RANK() OVER() AS sale_rank
FROM people ppl
JOIN sales sls
  ON ppl.id = sls.people_id
GROUP BY ppl.id, ppl.name
ORDER BY sale_count DESC
4 months agoRefactorDiscuss
-- Create your SELECT statement here
SELECT ppl.*,
      COUNT(sls.id) AS sale_count,
      DENSE_RANK() OVER (ORDER BY COUNT(sls.id) DESC) AS sale_rank
FROM people ppl
JOIN sales sls
  ON ppl.id = sls.people_id
GROUP BY ppl.id, ppl.name
ORDER BY sale_count DESC
4 months agoRefactorDiscuss
8 kyu
SQL Basics: Mod
SQL:
/*  SQL  */
SELECT (number1 % number2) AS mod
FROM decimals
4 months agoRefactorDiscuss
8 kyu
SQL Grasshopper: Select Columns
SQL:
-- Type your SQL here
SELECT custid, custname, custstate
FROM customers
4 months agoRefactorDiscuss
8 kyu
Count by X
Python:
def count_by(x, n):
    return [i*x for i in range(1, n+1)]
    
4 months agoRefactorDiscuss
R:
count_by <- function(x, n){
  return (seq(from = x, by = x, length = n))
}
4 months agoRefactorDiscuss
count_by <- function(x, n){
  multiples <- seq(from = x, by = x, length.out = n)
  return(multiples)
}
4 months agoRefactorDiscuss
8 kyu
Reversed sequence
Python:
def reverse_seq(n):
    return [num for num in range(n,0,-1)]
4 months agoRefactorDiscuss
6 kyu
Valid Braces
Python:
def valid_braces(string):
    stack = []
    mapping = {')': '(', ']': '[', '}': '{'}
    
    for char in string:
        if char in '([{':
            stack.append(char)
        elif char in ')]}':
            if not stack or stack.pop() != mapping[char]:
                return False
    return not stack
4 months agoRefactorDiscuss
def valid_braces(string):
    stack = []
    mapping = {')': '(', '}': '{', ']': '['}

    for char in string:
        if char in '({[':
            stack.append(char)
        elif char in ')}]':
            if not stack or stack.pop() != mapping[char]:
                return False

    return not stack
4 months agoRefactorDiscuss
5 kyu
Maximum subarray sum
Python:
def max_sequence(arr):
    max,curr=0,0
    for x in arr:
        curr+=x
        if curr<0:curr=0
        if curr>max:max=curr
    return max
4 months agoRefactor
def max_sequence(arr):
    max_sum = 0
    current_sum = 0
    
    for num in arr:
        current_sum = max(num, current_sum + num)
        max_sum = max(max_sum, current_sum)
    
    return max_sum

4 months agoRefactorDiscuss
5 kyu
Rot13
Python:
def rot13(message):
    result = []
    for char in message:
        if 'a' <= char <= 'z':
            # Shift lowercase letters
            shifted_char = chr(((ord(char) - ord('a') + 13) % 26) + ord('a'))
        elif 'A' <= char <= 'Z':
            # Shift uppercase letters
            shifted_char = chr(((ord(char) - ord('A') + 13) % 26) + ord('A'))
        else:
            # Leave numbers and special characters unchanged
            shifted_char = char
        result.append(shifted_char)
    return ''.join(result)
4 months agoRefactorDiscuss
5 kyu
The Hashtag Generator
Python:
def generate_hashtag(s):
    if not s:
        return False
    hashtag =  f"#{s.title().strip().replace(' ','')}"
    if len(hashtag) > 140:
        return False
    return hashtag
4 months agoRefactorDiscuss
8 kyu
Get Planet Name By ID
Python:
def get_planet_name(id):
    switch_id = {
        1:"Mercury",
        2:"Venus",
        3:"Earth",
        4:"Mars",
        5:"Jupiter",
        6:"Saturn",
        7:"Uranus",  
        8:"Neptune"
        }
    return switch_id.get(id)
4 months agoRefactorDiscuss
7 kyu
Remove anchor from URL
Python:
def remove_url_anchor(url):
    # Find the index of the '#' character in the URL
    anchor_index = url.find('#')
    
    # If '#' is found, slice the string to remove everything after it
    if anchor_index != -1:
        return url[:anchor_index]
    
    # If '#' is not found, return the original URL
    return url
4 months agoRefactorDiscuss
7 kyu
Anagram Detection
Python:
# write the function is_anagram
def is_anagram(test, original):
    return sorted(list(test.lower())) == sorted(list(original.lower()))
4 months agoRefactorDiscuss
7 kyu
Sum of a sequence
Python:
def sequence_sum(begin_number, end_number, step):
    if begin_number > end_number:
        return 0
    else:
        total = 0
        for num in range(begin_number, end_number+1, step):
             total += num 
        return total
4 months agoRefactorDiscuss
7 kyu
Remove duplicate words
Python:
def remove_duplicate_words(s):
    ans = []
    for word in s.split():
        if word not in ans:
            ans.append(word)
        continue
    return ' '.join(ans)
4 months agoRefactorDiscuss
7 kyu
Predict your age!
Python:
import math
def predict_age(age_1, age_2, age_3, age_4, age_5, age_6, age_7, age_8):
    multip = [age_1*age_1,age_2*age_2, age_3*age_3, age_4*age_4, age_5*age_5, age_6*age_6, age_7*age_7, age_8*age_8]
    return math.sqrt(sum(multip))//2
4 months agoRefactorDiscuss
6 kyu
Data Reverse
Python:
def data_reverse(data):
    # Initialize an empty result list
    result = []

    # Iterate through the input array in segments of 8 bits in reverse order
    for i in range(len(data) - 8, -1, -8):
        # Get the current 8-bit segment and append it to the result
        segment = data[i:i + 8]
        result.extend(segment)

    return result
4 months agoRefactorDiscuss
7 kyu
Two Oldest Ages
Python:
def two_oldest_ages(ages):
    return sorted(ages)[-2:]
4 months agoRefactor
def two_oldest_ages(ages):
    sorted_ages = sorted(ages)
    return sorted(sorted_ages[-1:-3:-1])
4 months agoRefactorDiscuss
7 kyu
Don't give me five!
Python:
def dont_give_me_five(start,end):
    count = 0
    for num in range(start, end+1):
        if '5' not in str(num):
            count += 1
    return count

4 months agoRefactorDiscuss
7 kyu
Remove the minimum
Python:
def remove_smallest(numbers):
    new_list = []
    count = 0

    for num in numbers:
        if num == min(numbers):
            if count > 0:
                new_list.append(num)
            else:
                count += 1
        else:
            new_list.append(num)

    return new_list
4 months agoRefactorDiscuss
6 kyu
Write Number in Expanded Form
Python:
def expanded_form(num):
    num_str = list(str(num))
    return ' + '.join(j + '0' * (len(num_str)-i-1) for i,j in enumerate(num_str) if j != '0')
4 months agoRefactorDiscuss
def expanded_form(num):
    num_str = str(num)
    expanded = []	

    for i, j in enumerate(num_str):
        if j != '0':
            expanded_part = j + '0' * (len(num_str)-i-1)
            expanded.append(expanded_part)
    return ' + '.join(expanded)
4 months agoRefactorDiscuss
7 kyu
Sum of the first nth term of Series
Python:
def series_sum(n):
    if n == 0:
        return "0.00"
    
    sum = 0.0
    for i in range(n):
        term = 1 / (1 + i * 3)  # Calculate each term of the series
        sum += term
    
    return "{:.2f}".format(sum)  # Format the sum to two decimal places
4 months agoRefactorDiscuss
6 kyu
Delete occurrences of an element if it occurs more than n times
Python:
def delete_nth(order,max_e):
    res = []
    for digit in order:
        if res.count(digit) != max_e:
            res.append(digit)
    return res
4 months agoRefactorDiscuss
6 kyu
Count the smiley faces!
Python:
def count_smileys(arr):
    count = 0
    for smiley in arr:
        if smiley in ':);):-);-):~);~):D;D:-D;-D:~D;~D':
            count += 1
    return count
4 months agoRefactorDiscuss
6 kyu
Are they the "same"?
Python:
def comp(array1, array2):
    if array1 is None or array2 is None:
        return False
    new_array1 = sorted([i**2 for i in array1])
    return new_array1 == sorted(array2)
    
4 months agoRefactorDiscuss
def comp(array1, array2):
    if array1 is None or array2 is None:
        return False
    if len(array1) != len(array2):
        return False

    squared_dict = {}
    for i in array1:
        squared_i = i ** 2
        if squared_i in squared_dict:
            squared_dict[squared_i] += 1
        else:
            squared_dict[squared_i] = 1
    for j in array2:
        if j not in squared_dict or squared_dict[j] == 0:
            return False
        squared_dict[j] -= 1
    return True
4 months agoRefactorDiscuss
7 kyu
Ones and Zeros
Python:
def binary_array_to_number(arr):
    return int(''.join(map(str, arr)),2)
     
4 months agoRefactorDiscuss
7 kyu
Growth of a Population
Python:
def nb_year(p0, percent, aug, p):
    count = 0
    curr = p0
    while curr < p:
        curr += int(curr * (percent/100)) + aug
        count += 1
    return count
4 months agoRefactorDiscuss
7 kyu
Binary Addition
Python:
def add_binary(a,b):
    return bin(a + b)[2:]
4 months agoRefactorDiscuss
6 kyu
Detect Pangram
Python:
import string

def is_pangram(s):
    pangram = s.lower()
    for letter in 'abcdefghijklmnopqrstuvwxyz':
        if letter not in pangram:
            return False
    return True
    
    
4 months agoRefactorDiscuss
def is_pangram(s):
    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    pangram = s.upper()
    return all(letter in pangram for letter in alphabet)
4 months agoRefactorDiscuss
7 kyu
Complementary DNA
Python:
rna = {"A":"T",
      "T":"A",
      "C":"G",
      "G":"C"}
def DNA_strand(dna):
    return ''.join([rna.get(x) for x in dna])
4 months agoRefactorDiscuss
def DNA_strand(dna):
    rna = {"A":"T",
          "T":"A",
          "C":"G",
          "G":"C"}
    res = []
    for molecule in dna:
        complement = rna.get(molecule)
        res.append(complement)
    return ''.join(res)
4 months agoRefactorDiscuss
R:
DNA_strand <- function(dna){
  chartr("ATGC", "TACG", dna)
}
4 months agoRefactor
DNA_strand <- function(dna){
  DNA_strand <- gsub("A", "t", dna)
  DNA_strand <- gsub("T", "a", DNA_strand)
  DNA_strand <- gsub("C", "g", DNA_strand)
  DNA_strand <- gsub("G", "c", DNA_strand)
  
  DNA_strand <- toupper(DNA_strand)
  return (DNA_strand)
}
4 months agoRefactorDiscuss
7 kyu
Isograms
Python:
def is_isogram(string):
    unique = string.lower()
    return len(unique) == len(set(unique))
4 months agoRefactorDiscuss
7 kyu
Highest and Lowest
Python:
def high_and_low(numbers):
    high = -1
    low = 1
    if len(numbers.split()) == 1:
        return f"{numbers[0:]} {numbers[0:]}"
    
    for i in numbers.split():
        high = max(high, int(i))
        low = min(low, int(i))
    return f"{high} {low}"
4 months agoRefactorDiscuss
7 kyu
Binary Representation of an Integer
Python:
def show_bits(n):
    # Ensure n is a 32-bit integer by using bitwise AND with 0xFFFFFFFF
    n &= 0xFFFFFFFF
    
    # Create a list of bits by using a list comprehension
    binary_list = [int((n >> i) & 1) for i in range(31, -1, -1)]
    
    return binary_list
4 months agoRefactorDiscuss
7 kyu
Dropcaps
Python:
def drop_cap(words):
    return ' '.join(word.capitalize() if len(word)>2 else word for word in words.split(' '))
4 months agoRefactor
def drop_cap(words):
    res = []
    words = words.split(' ')
    for word in words:
        if len(word)>2:
            res.append(word.capitalize())
        else:
            res.append(word)
    return ' '.join(res)
4 months agoRefactorDiscuss
7 kyu
Reverse sublists of even numbers
Python:
def rev_sub(arr):
    res = []
    sublist = []

    for digit in arr:
        if digit % 2 == 0:
            sublist.append(digit)
        else:
            if sublist:
                res.extend(sublist[::-1])
                sublist = []
            res.append(digit)
    if sublist:
	    res.extend(sublist[::-1])
    return res
4 months agoRefactorDiscuss
6 kyu
Split Strings
Python:
def solution(s):
    result = []
    
    for letter in range(0, len(s), 2):
        pair = s[letter:letter+2]
        if len(pair) == 1:
            pair += '_'
        result.append(pair)
    return result
4 months agoRefactorDiscuss
6 kyu
Persistent Bugger.
Python:
def persistence(n):
    num = str(n)
    
    if len(num) == 1:
        return 0
    else:
        current = 1
        for digit in num:
            current *= int(digit)
        return 1+persistence(current)
4 months agoRefactorDiscuss
def persistence(n):
    num = str(n)
    
    if len(num)==1:
        return 0
    else:
        current = 1
        for digit in num:
            temp = int(digit)
            current *= temp
        return 1 + persistence(current)

        

    
        
4 months agoRefactorDiscuss
8 kyu
Convert a string to an array
Python:
def string_to_array(s):
    if s == "":
        return ['']
    else:
        # Split the input string into words using whitespace as the separator
        return s.split()
4 months agoRefactorDiscuss
R:
string_to_array <- function(s){
  return (unlist(strsplit(s, split = " ")))
  
}
4 months agoRefactorDiscuss
8 kyu
Find Maximum and Minimum Values of a List
Python:
def minimum(arr):
    return min(arr)

def maximum(arr):
    return max(arr)
4 months agoRefactorDiscuss
R:
minimum <- function(vec){
  return (min(vec))
 } 

maximum <- function(vec){
  return (max(vec))
 } 
4 months agoRefactorDiscuss
8 kyu
Is he gonna survive?
Python:
def hero(bullets, dragons):
    return bullets >= dragons*2
4 months agoRefactor
def hero(bullets, dragons):
    return True if (bullets/2) >= dragons else False
4 months agoRefactorDiscuss
R:
hero <- function(bullets, dragons) {
  ifelse((bullets/2)>=dragons,TRUE, FALSE)

}
4 months agoRefactorDiscuss
8 kyu
Calculate average
Python:
def find_average(numbers):
    return 0 if not numbers else float(round(sum(numbers)/len(numbers), 2))
6 months agoRefactorDiscuss
R:
find_average <- function(vec){
  if (sum(vec) != 0) { 
    (sum(vec)/length(vec))  
  } else {
    return (0)
  }
}
4 months agoRefactorDiscuss
8 kyu
Are You Playing Banjo?
R:
are_you_playing_banjo <- function(name){
  if (substr(tolower(name), 1, 1) == 'r') {
    return (paste0(name, ' ', 'plays banjo'))
  } else {
  return (paste0(name, ' ', 'does not play banjo'))
 }
}

********* SOLUTION **********

def are_you_playing_banjo(name):
    return f"{name} plays banjo" if name.lower().startswith('r') else f"{name} does not play banjo"
